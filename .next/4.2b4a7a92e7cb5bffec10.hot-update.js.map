{"version":3,"file":"4.2b4a7a92e7cb5bffec10.hot-update.js","sources":["webpack:///pages/index.js"],"sourcesContent":["import react from 'react';\nimport BasePage from './base/page';\n\nimport api from './utilities/api';\n\nexport default class IndexPage extends BasePage {\n\tstate = {\n\t\tkittyCore: {},\n\t\tsaleAuction: {},\n\t\tsiringAuction: {}\n\t};\n\n\tstatic async getInitialProps() {\n\t\tconst kittyCoreResponse = await api.fetchKittyCoreContract();\n\t\tconst saleAuctionResponse = await api.fetchKittyCoreSaleAuctionContract();\n\t\tconst siringAuctionResponse = await api.fetchKittyCoreSiringAuctionContract();\n\n\t\treturn {\n\t\t\tkittyCore: kittyCoreResponse.data,\n\t\t\tsaleAuction: saleAuctionResponse.data,\n\t\t\tsiringAuction: siringAuctionResponse.data\n\t\t};\n\t}\n\n\trender() {\n\t\tif (!this.props.kittyCore || !this.props.saleAuction) {\n\t\t\treturn <div>Loading</div>;\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\tKitty Core: {this.props.kittyCore.address}\n\t\t\t\t{this.props.kittyCore.abi\n\t\t\t\t\t.filter(e => e.constant)\n\t\t\t\t\t.map(this.renderCall.bind(this, 'kittyCore'))}\n\t\t\t\tSale Auction: {this.props.saleAuction.address}\n\t\t\t\t{this.props.saleAuction.abi\n\t\t\t\t\t.filter(e => e.constant)\n\t\t\t\t\t.map(this.renderCall.bind(this, 'saleAuction'))}\n\t\t\t\tSiring Auction: {this.props.siringAuction.address}\n\t\t\t\t{this.props.siringAuction.abi\n\t\t\t\t\t.filter(e => e.constant)\n\t\t\t\t\t.map(this.renderCall.bind(this, 'siringAuction'))}\n\t\t\t</div>\n\t\t);\n\t}\n\n\trenderCall(contract, method, index) {\n\t\treturn (\n\t\t\t<div style={{ margin: '12px 0' }} key={`call-${contract}${index}`}>\n\t\t\t\t<button\n\t\t\t\t\tonClick={this.handleOnClick.bind(this, contract, method)}\n\t\t\t\t\tstyle={{ fontWeight: 'bold', display: 'inline-block' }}\n\t\t\t\t>\n\t\t\t\t\t{method.name}\n\t\t\t\t</button>\n\t\t\t\t{method.inputs.map(this.renderInput.bind(this, contract, method))}\n\t\t\t\t{this.renderValue(contract, method)}\n\t\t\t</div>\n\t\t);\n\t}\n\n\trenderValue(contract, method) {\n\t\tconst value = this.state[contract][`${method.name}-value`];\n\n\t\tif (!value) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn (\n\t\t\t<div style={{ marginTop: '12px' }}>\n\t\t\t\t{JSON.stringify(value, null, 2)}\n\t\t\t</div>\n\t\t);\n\t}\n\n\trenderInput(contract, method, input, index) {\n\t\treturn (\n\t\t\t<input\n\t\t\t\tkey={`input-${contract}${index}`}\n\t\t\t\tonChange={this.handleOnChange.bind(this, contract, method, input)}\n\t\t\t\tvalue={this.state[contract][`${method.name}-${input.name}`]}\n\t\t\t\tplaceholder={input.name}\n\t\t\t\tstyle={{ display: 'inline-block', marginLeft: '12px' }}\n\t\t\t/>\n\t\t);\n\t}\n\n\thandleOnChange(contract, method, input, evt) {\n\t\tconst c = this.state[contract];\n\n\t\treturn this.setState({\n\t\t\t[contract]: Object.assign({}, c, { [`${method.name}-${input.name}`]: evt.target.value })\n\t\t});\n\t}\n\n\tasync handleOnClick(contract, method) {\n\t\tconst payload = {};\n\t\tconst inputs = method.inputs.forEach(each => {\n\t\t\tpayload[each.name] = this.state[contract][`${method.name}-${each.name}`];\n\t\t});\n\n\t\tconst response = await api.fetchKittyCoreCall(method, payload);\n\n\t\tconst c = this.state[contract];\n\t\treturn this.setState({\n\t\t\t[contract]: Object.assign({}, c, { [`${method.name}-value`]: response.data })\n\t\t});\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// pages/index.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAHA;;;;;;AAkBA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAIA;AAAA;AAIA;AAAA;AAIA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAUA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAQA;;;AAEA;AACA;AAEA;AAGA;;;;;;AAEA;;;;;;;;AACA;AACA;AACA;AACA;;AAEA;AACA;;AADA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA7FA;AACA;;AADA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;AAEA;AACA;AACA;AACA;AAHA;AACA;;;;;;;;;;;;;;;;AAbA;AACA;AADA;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}