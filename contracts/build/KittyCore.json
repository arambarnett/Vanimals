{
  "contractName": "KittyCore",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cfoAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_preferredTransport",
          "type": "string"
        }
      ],
      "name": "tokenMetadata",
      "outputs": [
        {
          "name": "infoUrl",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "promoCreatedCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ceoAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GEN0_STARTING_PRICE",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setSiringAuctionAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pregnantKitties",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_kittyId",
          "type": "uint256"
        }
      ],
      "name": "isPregnant",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GEN0_AUCTION_DURATION",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "siringAuction",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setGeneScienceAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newCEO",
          "type": "address"
        }
      ],
      "name": "setCEO",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newCOO",
          "type": "address"
        }
      ],
      "name": "setCOO",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_kittyId",
          "type": "uint256"
        },
        {
          "name": "_startingPrice",
          "type": "uint256"
        },
        {
          "name": "_endingPrice",
          "type": "uint256"
        },
        {
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "createSaleAuction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "sireAllowedToAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_matronId",
          "type": "uint256"
        },
        {
          "name": "_sireId",
          "type": "uint256"
        }
      ],
      "name": "canBreedWith",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "kittyIndexToApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_kittyId",
          "type": "uint256"
        },
        {
          "name": "_startingPrice",
          "type": "uint256"
        },
        {
          "name": "_endingPrice",
          "type": "uint256"
        },
        {
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "createSiringAuction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "setAutoBirthFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        },
        {
          "name": "_sireId",
          "type": "uint256"
        }
      ],
      "name": "approveSiring",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newCFO",
          "type": "address"
        }
      ],
      "name": "setCFO",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_genes",
          "type": "uint256"
        },
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "createPromoKitty",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "secs",
          "type": "uint256"
        }
      ],
      "name": "setSecondsPerBlock",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GEN0_CREATION_LIMIT",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newContractAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setSaleAuctionAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "count",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "secondsPerBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "name": "ownerTokens",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_matronId",
          "type": "uint256"
        }
      ],
      "name": "giveBirth",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawAuctionBalances",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "cooldowns",
      "outputs": [
        {
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "kittyIndexToOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cooAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "autoBirthFee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "erc721Metadata",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_genes",
          "type": "uint256"
        }
      ],
      "name": "createGen0Auction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_kittyId",
          "type": "uint256"
        }
      ],
      "name": "isReadyToBreed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PROMO_CREATION_LIMIT",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "setMetadataAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "saleAuction",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_sireId",
          "type": "uint256"
        },
        {
          "name": "_matronId",
          "type": "uint256"
        }
      ],
      "name": "bidOnSiringAuction",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "gen0CreatedCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "geneScience",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_matronId",
          "type": "uint256"
        },
        {
          "name": "_sireId",
          "type": "uint256"
        }
      ],
      "name": "breedWithAuto",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "matronId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "sireId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "cooldownEndBlock",
          "type": "uint256"
        }
      ],
      "name": "Pregnant",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "kittyId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "matronId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "sireId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "genes",
          "type": "uint256"
        }
      ],
      "name": "Birth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newContract",
          "type": "address"
        }
      ],
      "name": "ContractUpgrade",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_v2Address",
          "type": "address"
        }
      ],
      "name": "setNewAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getKitty",
      "outputs": [
        {
          "name": "isGestating",
          "type": "bool"
        },
        {
          "name": "isReady",
          "type": "bool"
        },
        {
          "name": "cooldownIndex",
          "type": "uint256"
        },
        {
          "name": "nextActionAt",
          "type": "uint256"
        },
        {
          "name": "siringWithId",
          "type": "uint256"
        },
        {
          "name": "birthTime",
          "type": "uint256"
        },
        {
          "name": "matronId",
          "type": "uint256"
        },
        {
          "name": "sireId",
          "type": "uint256"
        },
        {
          "name": "generation",
          "type": "uint256"
        },
        {
          "name": "genes",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawBalance",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526000600260146101000a81548160ff0219169083151502179055506101c060405190810160405280603c63ffffffff1663ffffffff168152602001607863ffffffff1663ffffffff16815260200161012c63ffffffff1663ffffffff16815260200161025863ffffffff1663ffffffff16815260200161070863ffffffff1663ffffffff168152602001610e1063ffffffff1663ffffffff168152602001611c2063ffffffff1663ffffffff16815260200161384063ffffffff1663ffffffff16815260200161708063ffffffff1663ffffffff16815260200161e10063ffffffff1663ffffffff1681526020016201518063ffffffff1663ffffffff1681526020016202a30063ffffffff1663ffffffff1681526020016205460063ffffffff1663ffffffff16815260200162093a8063ffffffff1663ffffffff16815250600390600e62000156929190620007a2565b50600f60055566071afd498d0000600e553480156200017457600080fd5b506001600260146101000a81548160ff021916908315150217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200025260008060007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600062000259640100000000026401000000009004565b50620008f6565b600080620002666200084c565b60008863ffffffff16891415156200027d57600080fd5b8763ffffffff16881415156200029257600080fd5b8661ffff1687141515620002a557600080fd5b600287811515620002b257fe5b049250600d8361ffff161115620002c857600d92505b610100604051908101604052808781526020014267ffffffffffffffff168152602001600067ffffffffffffffff1681526020018a63ffffffff1681526020018963ffffffff168152602001600063ffffffff1681526020018461ffff1681526020018861ffff1681525091506001600683908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160010160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060608201518160010160106101000a81548163ffffffff021916908363ffffffff16021790555060808201518160010160146101000a81548163ffffffff021916908363ffffffff16021790555060a08201518160010160186101000a81548163ffffffff021916908363ffffffff16021790555060c082015181600101601c6101000a81548161ffff021916908361ffff16021790555060e082015181600101601e6101000a81548161ffff021916908361ffff16021790555050500390508063ffffffff1681141515620004a257600080fd5b7f0a5311bd2a6608f08a180df2ee7c5946819a649b204b554bb8e39825b2c50ad58582846060015163ffffffff16856080015163ffffffff168660000151604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018381526020018281526020019550505050505060405180910390a16200055a6000868362000569640100000000026401000000009004565b80935050505095945050505050565b600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816007600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515620006fe57600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600190039190505550600a600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556009600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1505050565b82600e600701600890048101928215620008395791602002820160005b838211156200080557835183826101000a81548163ffffffff021916908363ffffffff1602179055509260200192600401602081600301049283019260010302620007bf565b8015620008375782816101000a81549063ffffffff021916905560040160208160030104928301926001030262000805565b505b509050620008489190620008c0565b5090565b6101006040519081016040528060008152602001600067ffffffffffffffff168152602001600067ffffffffffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600061ffff168152602001600061ffff1681525090565b620008f391905b80821115620008ef57600081816101000a81549063ffffffff021916905550600101620008c7565b5090565b90565b6154b380620009066000396000f3006080604052600436106102bf576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a7146103755780630519ce79146103d95780630560ff441461043057806305e45546146104ee57806306fdde0314610519578063095ea7b3146105a95780630a0f8168146105f65780630e583df01461064d57806314001f4c1461067857806318160ddd146106bb578063183a7947146106e65780631940a9361461071157806319c2f2011461075657806321717ebf1461078157806323b872dd146107d857806324e7a38a1461084557806327d7874c146108885780632ba73c15146108cb5780633d7d3f5a1461090e5780633f4ba83a1461095957806346116e6f1461097057806346d22c70146109dd578063481af3d314610a2c5780634ad8c93814610a995780634b85fd5514610ae45780634dfff04f14610b115780634e0a337914610b5e5780635612913414610ba15780635663896e14610bee5780635c975abb14610c1b5780635fd8c71014610c4a5780636352211e14610c61578063680eba2714610cce5780636af04a5714610cf95780636fbde40d14610d5057806370a0823114610d935780637158798814610dea5780637a7d493714610e2d5780638456cb5914610e585780638462151c14610e6f57806388c2a0bf14610f0757806391876e5714610f4857806395d89b4114610f5f5780639d6fac6f14610fef578063a45f4bfc1461103c578063a9059cbb146110a9578063b047fb50146110f6578063b0c35c051461114d578063bc4006f514611178578063c3bea9af146111cf578063d3e6f49f146111fc578063defb958414611241578063e17b25af1461126c578063e6cbe351146112af578063e98b7f4d14611306578063ed60ade61461138e578063f1ca9410146113b8578063f2b47d52146113e3578063f7d8c8831461143a575b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806103685750600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b151561037357600080fd5b005b34801561038157600080fd5b506103bf60048036038101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050611464565b604051808215151515815260200191505060405180910390f35b3480156103e557600080fd5b506103ee611775565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561043c57600080fd5b506104736004803603810190808035906020019092919080359060200190820180359060200191909192939192939050505061179b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104b3578082015181840152602081019050610498565b50505050905090810190601f1680156104e05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104fa57600080fd5b50610503611924565b6040518082815260200191505060405180910390f35b34801561052557600080fd5b5061052e61192a565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561056e578082015181840152602081019050610553565b50505050905090810190601f16801561059b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156105b557600080fd5b506105f4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611963565b005b34801561060257600080fd5b5061060b611a41565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561065957600080fd5b50610662611a66565b6040518082815260200191505060405180910390f35b34801561068457600080fd5b506106b9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a71565b005b3480156106c757600080fd5b506106d0611bc0565b6040518082815260200191505060405180910390f35b3480156106f257600080fd5b506106fb611bd0565b6040518082815260200191505060405180910390f35b34801561071d57600080fd5b5061073c60048036038101908080359060200190929190505050611bd6565b604051808215151515815260200191505060405180910390f35b34801561076257600080fd5b5061076b611c28565b6040518082815260200191505060405180910390f35b34801561078d57600080fd5b50610796611c2f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156107e457600080fd5b50610843600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c55565b005b34801561085157600080fd5b50610886600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d22565b005b34801561089457600080fd5b506108c9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e71565b005b3480156108d757600080fd5b5061090c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f4b565b005b34801561091a57600080fd5b5061095760048036038101908080359060200190929190803590602001909291908035906020019092919080359060200190929190505050612026565b005b34801561096557600080fd5b5061096e612193565b005b34801561097c57600080fd5b5061099b6004803603810190808035906020019092919050505061238a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156109e957600080fd5b50610a1260048036038101908080359060200190929190803590602001909291905050506123bd565b604051808215151515815260200191505060405180910390f35b348015610a3857600080fd5b50610a5760048036038101908080359060200190929190505050612445565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610aa557600080fd5b50610ae260048036038101908080359060200190929190803590602001909291908035906020019092919080359060200190929190505050612478565b005b348015610af057600080fd5b50610b0f600480360381019080803590602001909291905050506125e4565b005b348015610b1d57600080fd5b50610b5c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061264a565b005b348015610b6a57600080fd5b50610b9f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506126d1565b005b348015610bad57600080fd5b50610bec60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506127ac565b005b348015610bfa57600080fd5b50610c19600480360381019080803590602001909291905050506128a6565b005b348015610c2757600080fd5b50610c306129fa565b604051808215151515815260200191505060405180910390f35b348015610c5657600080fd5b50610c5f612a0d565b005b348015610c6d57600080fd5b50610c8c60048036038101908080359060200190929190505050612af9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610cda57600080fd5b50610ce3612b72565b6040518082815260200191505060405180910390f35b348015610d0557600080fd5b50610d0e612b7d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610d5c57600080fd5b50610d91600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612ba3565b005b348015610d9f57600080fd5b50610dd4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612cf2565b6040518082815260200191505060405180910390f35b348015610df657600080fd5b50610e2b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612d3b565b005b348015610e3957600080fd5b50610e42612e58565b6040518082815260200191505060405180910390f35b348015610e6457600080fd5b50610e6d612e5e565b005b348015610e7b57600080fd5b50610eb0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612fa2565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610ef3578082015181840152602081019050610ed8565b505050509050019250505060405180910390f35b348015610f1357600080fd5b50610f32600480360381019080803590602001909291905050506130ef565b6040518082815260200191505060405180910390f35b348015610f5457600080fd5b50610f5d613526565b005b348015610f6b57600080fd5b50610f7461376f565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610fb4578082015181840152602081019050610f99565b50505050905090810190601f168015610fe15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610ffb57600080fd5b5061101a600480360381019080803590602001909291905050506137a8565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561104857600080fd5b50611067600480360381019080803590602001909291905050506137d7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156110b557600080fd5b506110f4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061380a565b005b34801561110257600080fd5b5061110b61397b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561115957600080fd5b506111626139a1565b6040518082815260200191505060405180910390f35b34801561118457600080fd5b5061118d6139a7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156111db57600080fd5b506111fa600480360381019080803590602001909291905050506139cd565b005b34801561120857600080fd5b5061122760048036038101908080359060200190929190505050613b95565b604051808215151515815260200191505060405180910390f35b34801561124d57600080fd5b50611256613d04565b6040518082815260200191505060405180910390f35b34801561127857600080fd5b506112ad600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613d0f565b005b3480156112bb57600080fd5b506112c4613dae565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561131257600080fd5b5061133160048036038101908080359060200190929190505050613dd4565b604051808b1515151581526020018a1515151581526020018981526020018881526020018781526020018681526020018581526020018481526020018381526020018281526020019a505050505050505050505060405180910390f35b6113b66004803603810190808035906020019092919080359060200190929190505050613f35565b005b3480156113c457600080fd5b506113cd61413b565b6040518082815260200191505060405180910390f35b3480156113ef57600080fd5b506113f8614141565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6114626004803603810190808035906020019092919080359060200190929190505050614167565b005b600060405180807f737570706f727473496e74657266616365286279746573342900000000000000815250601901905060405180910390207bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061176e575060405180807f746f6b656e4d657461646174612875696e743235362c737472696e6729000000815250601d019050604051809103902060405180807f746f6b656e734f664f776e6572286164647265737329000000000000000000008152506016019050604051809103902060405180807f7472616e7366657246726f6d28616464726573732c616464726573732c75696e81526020017f74323536290000000000000000000000000000000000000000000000000000008152506025019050604051809103902060405180807f7472616e7366657228616464726573732c75696e7432353629000000000000008152506019019050604051809103902060405180807f617070726f766528616464726573732c75696e743235362900000000000000008152506018019050604051809103902060405180807f6f776e65724f662875696e7432353629000000000000000000000000000000008152506010019050604051809103902060405180807f62616c616e63654f6628616464726573732900000000000000000000000000008152506012019050604051809103902060405180807f746f74616c537570706c79282900000000000000000000000000000000000000815250600d019050604051809103902060405180807f73796d626f6c28290000000000000000000000000000000000000000000000008152506008019050604051809103902060405180807f6e616d6528290000000000000000000000000000000000000000000000000000815250600601905060405180910390201818181818181818187bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606117a56153f0565b60008073ffffffffffffffffffffffffffffffffffffffff16600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561180457600080fd5b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cb4799f28787876040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180848152602001806020018281038252848482818152602001925080828437820191505094505050505060a060405180830381600087803b1580156118b757600080fd5b505af11580156118cb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525060a08110156118f057600080fd5b8101908091908260800180519060200190929190505050809250819350505061191982826144a8565b925050509392505050565b60115481565b6040805190810160405280600d81526020017f43727970746f4b6974746965730000000000000000000000000000000000000081525081565b600260149054906101000a900460ff1615151561197f57600080fd5b6119893382614504565b151561199457600080fd5b61199e8183614570565b7f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925338383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b662386f26fc1000081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611ace57600080fd5b8190508073ffffffffffffffffffffffffffffffffffffffff166376190f8f6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611b3557600080fd5b505af1158015611b49573d6000803e3d6000fd5b505050506040513d6020811015611b5f57600080fd5b81019080805190602001909291905050501515611b7b57600080fd5b80600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000600160068054905003905090565b600f5481565b60008082111515611be657600080fd5b6000600683815481101515611bf757fe5b906000526020600020906002020160010160189054906101000a900463ffffffff1663ffffffff1614159050919050565b6201518081565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260149054906101000a900460ff16151515611c7157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611cad57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611ce857600080fd5b611cf233826145c6565b1515611cfd57600080fd5b611d078382614504565b1515611d1257600080fd5b611d1d838383614632565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611d7f57600080fd5b8190508073ffffffffffffffffffffffffffffffffffffffff166354c15b826040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611de657600080fd5b505af1158015611dfa573d6000803e3d6000fd5b505050506040513d6020811015611e1057600080fd5b81019080805190602001909291905050501515611e2c57600080fd5b80601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611ecc57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611f0857600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611fa657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611fe257600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260149054906101000a900460ff1615151561204257600080fd5b61204c3385614504565b151561205757600080fd5b61206084611bd6565b15151561206c57600080fd5b61209884600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16614570565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166327ebe40a85858585336040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050600060405180830381600087803b15801561217557600080fd5b505af1158015612189573d6000803e3d6000fd5b5050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156121ee57600080fd5b600260149054906101000a900460ff16151561220957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561226757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156122c557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561232357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561238057600080fd5b61238861486a565b565b600a6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600080851115156123d057600080fd5b6000841115156123df57600080fd5b6006858154811015156123ee57fe5b9060005260206000209060020201915060068481548110151561240d57fe5b90600052602060002090600202019050612429828683876148fd565b801561243b575061243a8486614b12565b5b9250505092915050565b60096020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260149054906101000a900460ff1615151561249457600080fd5b61249e3385614504565b15156124a957600080fd5b6124b284613b95565b15156124bd57600080fd5b6124e984600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16614570565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166327ebe40a85858585336040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050600060405180830381600087803b1580156125c657600080fd5b505af11580156125da573d6000803e3d6000fd5b5050505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561264057600080fd5b80600e8190555050565b600260149054906101000a900460ff1615151561266657600080fd5b6126703382614504565b151561267b57600080fd5b81600a600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561272c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561276857600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561280a57600080fd5b819050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561286857600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b66038d7ea4c6800060115410151561287f57600080fd5b6011600081548092919060010191905055506128a060008060008685614c25565b50505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061294e57506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806129a65750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b15156129b157600080fd5b60036000600e811015156129c157fe5b600891828204019190066004029054906101000a900463ffffffff1663ffffffff16811015156129f057600080fd5b8060058190555050565b600260149054906101000a900460ff1681565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612a6c57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff16319150600e546001600f540102905080821115612af557600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8284039081150290604051600060405180830381858888f19350505050505b5050565b60006007600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612b6d57600080fd5b919050565b66038d7ea4c6800081565b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612c0057600080fd5b8190508073ffffffffffffffffffffffffffffffffffffffff166385b861886040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612c6757600080fd5b505af1158015612c7b573d6000803e3d6000fd5b505050506040513d6020811015612c9157600080fd5b81019080805190602001909291905050501515612cad57600080fd5b80600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612d9657600080fd5b600260149054906101000a900460ff161515612db157600080fd5b80601360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f450db8da6efbe9c22f2347f7c2021231df1fc58d3ae9a2fa75d39fa44619930581604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b60055481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480612f0657506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b80612f5e5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515612f6957600080fd5b600260149054906101000a900460ff16151515612f8557600080fd5b6001600260146101000a81548160ff021916908315150217905550565b6060600060606000806000612fb687612cf2565b94506000851415612ff9576000604051908082528060200260200182016040528015612ff15781602001602082028038833980820191505090505b5095506130e5565b846040519080825280602002602001820160405280156130285781602001602082028038833980820191505090505b509350613033611bc0565b925060009150600190505b82811115156130e1578673ffffffffffffffffffffffffffffffffffffffff166007600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156130d4578084838151811015156130bd57fe5b906020019060200201818152505081806001019250505b808060010191505061303e565b8395505b5050505050919050565b600080600080600080600080600260149054906101000a900460ff1615151561311757600080fd5b60068981548110151561312657fe5b9060005260206000209060020201965060008760010160009054906101000a900467ffffffffffffffff1667ffffffffffffffff161415151561316857600080fd5b61329e876101006040519081016040529081600082015481526020016001820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160109054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160149054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160189054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160018201601c9054906101000a900461ffff1661ffff1661ffff16815260200160018201601e9054906101000a900461ffff1661ffff1661ffff1681525050614f1c565b15156132a957600080fd5b8660010160189054906101000a900463ffffffff1663ffffffff1695506006868154811015156132d557fe5b9060005260206000209060020201945086600101601e9054906101000a900461ffff16935086600101601e9054906101000a900461ffff1661ffff1685600101601e9054906101000a900461ffff1661ffff1611156133445784600101601e9054906101000a900461ffff1693505b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d9f5aed8860000154876000015460018b60010160089054906101000a900467ffffffffffffffff16036040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018381526020018267ffffffffffffffff1681526020019350505050602060405180830381600087803b15801561341257600080fd5b505af1158015613426573d6000803e3d6000fd5b505050506040513d602081101561343c57600080fd5b81019080805190602001909291905050509250600760008a815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691506134b3898860010160189054906101000a900463ffffffff1663ffffffff166001870161ffff168686614c25565b90508660010160186101000a81549063ffffffff0219169055600f60008154809291906001900391905055503373ffffffffffffffffffffffffffffffffffffffff166108fc600e549081150290604051600060405180830381858888f193505050505080975050505050505050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806135ce57506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806136265750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b151561363157600080fd5b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635fd8c7106040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b1580156136b757600080fd5b505af11580156136cb573d6000803e3d6000fd5b50505050600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635fd8c7106040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561375557600080fd5b505af1158015613769573d6000803e3d6000fd5b50505050565b6040805190810160405280600281526020017f434b00000000000000000000000000000000000000000000000000000000000081525081565b600381600e811015156137b757fe5b60089182820401919006600402915054906101000a900463ffffffff1681565b60076020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260149054906101000a900460ff1615151561382657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561386257600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561389d57600080fd5b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156138fa57600080fd5b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561395757600080fd5b6139613382614504565b151561396c57600080fd5b613977338383614632565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600e5481565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515613a2b57600080fd5b66038d7ea4c68000601254101515613a4257600080fd5b613a5160008060008530614c25565b9050613a7f81600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16614570565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166327ebe40a82613ac6614f57565b600062015180306040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050600060405180830381600087803b158015613b6757600080fd5b505af1158015613b7b573d6000803e3d6000fd5b505050506012600081548092919060010191905055505050565b600080600083111515613ba757600080fd5b600683815481101515613bb657fe5b90600052602060002090600202019050613cfc816101006040519081016040529081600082015481526020016001820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160109054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160149054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160189054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160018201601c9054906101000a900461ffff1661ffff1661ffff16815260200160018201601e9054906101000a900461ffff1661ffff1661ffff1681525050615072565b915050919050565b66038d7ea4c6800081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515613d6a57600080fd5b80600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600080600080600080600080600060068c815481101515613df457fe5b9060005260206000209060020201905060008160010160189054906101000a900463ffffffff1663ffffffff1614159a50438160010160089054906101000a900467ffffffffffffffff1667ffffffffffffffff161115995080600101601c9054906101000a900461ffff1661ffff1698508060010160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1697508060010160189054906101000a900463ffffffff1663ffffffff1696508060010160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1695508060010160109054906101000a900463ffffffff1663ffffffff1694508060010160149054906101000a900463ffffffff1663ffffffff16935080600101601e9054906101000a900461ffff1661ffff16925080600001549150509193959799509193959799565b6000600260149054906101000a900460ff16151515613f5357600080fd5b613f5d3383614504565b1515613f6857600080fd5b613f7182613b95565b1515613f7c57600080fd5b613f8682846150ac565b1515613f9157600080fd5b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55d0f56846040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b15801561402257600080fd5b505af1158015614036573d6000803e3d6000fd5b505050506040513d602081101561404c57600080fd5b81019080805190602001909291905050509050600e548101341015151561407257600080fd5b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663454a2ab3600e543403856040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808281526020019150506000604051808303818588803b15801561410757600080fd5b505af115801561411b573d6000803e3d6000fd5b50505050506141368263ffffffff168463ffffffff16615105565b505050565b60125481565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600260149054906101000a900460ff1615151561418657600080fd5b600e54341015151561419757600080fd5b6141a13385614504565b15156141ac57600080fd5b6141b68385614b12565b15156141c157600080fd5b6006848154811015156141d057fe5b90600052602060002090600202019150614316826101006040519081016040529081600082015481526020016001820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160109054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160149054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160189054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160018201601c9054906101000a900461ffff1661ffff1661ffff16815260200160018201601e9054906101000a900461ffff1661ffff1661ffff1681525050615072565b151561432157600080fd5b60068381548110151561433057fe5b90600052602060002090600202019050614476816101006040519081016040529081600082015481526020016001820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160109054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160149054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160189054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160018201601c9054906101000a900461ffff1661ffff1661ffff16815260200160018201601e9054906101000a900461ffff1661ffff1661ffff1681525050615072565b151561448157600080fd5b61448d828583866148fd565b151561449857600080fd5b6144a28484615105565b50505050565b606080600080846040519080825280601f01601f1916602001820160405280156144e15781602001602082028038833980820191505090505b5092506020830191508590506144f88282876152cf565b82935050505092915050565b60008273ffffffffffffffffffffffffffffffffffffffff166007600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b806009600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008273ffffffffffffffffffffffffffffffffffffffff166009600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816007600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415156147c657600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600190039190505550600a600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556009600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156148c557600080fd5b600260149054906101000a900460ff1615156148e057600080fd5b6000600260146101000a81548160ff021916908315150217905550565b6000818414156149105760009050614b0a565b818560010160109054906101000a900463ffffffff1663ffffffff1614806149515750818560010160149054906101000a900463ffffffff1663ffffffff16145b1561495f5760009050614b0a565b838360010160109054906101000a900463ffffffff1663ffffffff1614806149a05750838360010160149054906101000a900463ffffffff1663ffffffff16145b156149ae5760009050614b0a565b60008360010160109054906101000a900463ffffffff1663ffffffff1614806149f1575060008560010160109054906101000a900463ffffffff1663ffffffff16145b156149ff5760019050614b0a565b8460010160109054906101000a900463ffffffff1663ffffffff168360010160109054906101000a900463ffffffff1663ffffffff161480614a7457508460010160149054906101000a900463ffffffff1663ffffffff168360010160109054906101000a900463ffffffff1663ffffffff16145b15614a825760009050614b0a565b8460010160109054906101000a900463ffffffff1663ffffffff168360010160149054906101000a900463ffffffff1663ffffffff161480614af757508460010160149054906101000a900463ffffffff1663ffffffff168360010160149054906101000a900463ffffffff1663ffffffff16145b15614b055760009050614b0a565b600190505b949350505050565b60008060006007600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691506007600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161480614c1b57508173ffffffffffffffffffffffffffffffffffffffff16600a600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b9250505092915050565b600080614c30615413565b60008863ffffffff1689141515614c4657600080fd5b8763ffffffff1688141515614c5a57600080fd5b8661ffff1687141515614c6c57600080fd5b600287811515614c7857fe5b049250600d8361ffff161115614c8d57600d92505b610100604051908101604052808781526020014267ffffffffffffffff168152602001600067ffffffffffffffff1681526020018a63ffffffff1681526020018963ffffffff168152602001600063ffffffff1681526020018461ffff1681526020018861ffff1681525091506001600683908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160010160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060608201518160010160106101000a81548163ffffffff021916908363ffffffff16021790555060808201518160010160146101000a81548163ffffffff021916908363ffffffff16021790555060a08201518160010160186101000a81548163ffffffff021916908363ffffffff16021790555060c082015181600101601c6101000a81548161ffff021916908361ffff16021790555060e082015181600101601e6101000a81548161ffff021916908361ffff16021790555050500390508063ffffffff1681141515614e6657600080fd5b7f0a5311bd2a6608f08a180df2ee7c5946819a649b204b554bb8e39825b2c50ad58582846060015163ffffffff16856080015163ffffffff168660000151604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018381526020018281526020019550505050505060405180910390a1614f0d60008683614632565b80935050505095945050505050565b6000808260a0015163ffffffff1614158015614f5057504367ffffffffffffffff16826040015167ffffffffffffffff1611155b9050919050565b6000806000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663eac9d94c6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015614fe257600080fd5b505af1158015614ff6573d6000803e3d6000fd5b505050506040513d602081101561500c57600080fd5b81019080805190602001909291905050509150816fffffffffffffffffffffffffffffffff168214151561503f57600080fd5b60028281151561504b57fe5b0482019050662386f26fc1000081101561506a57662386f26fc1000090505b809250505090565b6000808260a0015163ffffffff161480156150a557504367ffffffffffffffff16826040015167ffffffffffffffff1611155b9050919050565b60008060006006858154811015156150c057fe5b906000526020600020906002020191506006848154811015156150df57fe5b906000526020600020906002020190506150fb828683876148fd565b9250505092915050565b60008060068381548110151561511757fe5b9060005260206000209060020201915060068481548110151561513657fe5b90600052602060002090600202019050828160010160186101000a81548163ffffffff021916908363ffffffff1602179055506151728261531a565b61517b8161531a565b600a600085815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600a600084815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600f600081548092919060010191905055507f241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b806007600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685858460010160089054906101000a900467ffffffffffffffff16604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018267ffffffffffffffff16815260200194505050505060405180910390a150505050565b60005b6020821015156152f757825184526020840193506020830192506020820391506152d2565b6001826020036101000a0390508019835116818551168181178652505050505050565b43600554600383600101601c9054906101000a900461ffff1661ffff16600e8110151561534357fe5b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1681151561536e57fe5b04018160010160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550600d81600101601c9054906101000a900461ffff1661ffff1610156153ed57600181600101601c8282829054906101000a900461ffff160192506101000a81548161ffff021916908361ffff1602179055505b50565b608060405190810160405280600490602082028038833980820191505090505090565b6101006040519081016040528060008152602001600067ffffffffffffffff168152602001600067ffffffffffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600061ffff168152602001600061ffff16815250905600a165627a7a7230582074101fdee3a27f09dc27b0956e0fad85f91cd03386f09c823d5ec3f89131455e0029",
  "deployedBytecode": "0x6080604052600436106102bf576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a7146103755780630519ce79146103d95780630560ff441461043057806305e45546146104ee57806306fdde0314610519578063095ea7b3146105a95780630a0f8168146105f65780630e583df01461064d57806314001f4c1461067857806318160ddd146106bb578063183a7947146106e65780631940a9361461071157806319c2f2011461075657806321717ebf1461078157806323b872dd146107d857806324e7a38a1461084557806327d7874c146108885780632ba73c15146108cb5780633d7d3f5a1461090e5780633f4ba83a1461095957806346116e6f1461097057806346d22c70146109dd578063481af3d314610a2c5780634ad8c93814610a995780634b85fd5514610ae45780634dfff04f14610b115780634e0a337914610b5e5780635612913414610ba15780635663896e14610bee5780635c975abb14610c1b5780635fd8c71014610c4a5780636352211e14610c61578063680eba2714610cce5780636af04a5714610cf95780636fbde40d14610d5057806370a0823114610d935780637158798814610dea5780637a7d493714610e2d5780638456cb5914610e585780638462151c14610e6f57806388c2a0bf14610f0757806391876e5714610f4857806395d89b4114610f5f5780639d6fac6f14610fef578063a45f4bfc1461103c578063a9059cbb146110a9578063b047fb50146110f6578063b0c35c051461114d578063bc4006f514611178578063c3bea9af146111cf578063d3e6f49f146111fc578063defb958414611241578063e17b25af1461126c578063e6cbe351146112af578063e98b7f4d14611306578063ed60ade61461138e578063f1ca9410146113b8578063f2b47d52146113e3578063f7d8c8831461143a575b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806103685750600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b151561037357600080fd5b005b34801561038157600080fd5b506103bf60048036038101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050611464565b604051808215151515815260200191505060405180910390f35b3480156103e557600080fd5b506103ee611775565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561043c57600080fd5b506104736004803603810190808035906020019092919080359060200190820180359060200191909192939192939050505061179b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104b3578082015181840152602081019050610498565b50505050905090810190601f1680156104e05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104fa57600080fd5b50610503611924565b6040518082815260200191505060405180910390f35b34801561052557600080fd5b5061052e61192a565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561056e578082015181840152602081019050610553565b50505050905090810190601f16801561059b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156105b557600080fd5b506105f4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611963565b005b34801561060257600080fd5b5061060b611a41565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561065957600080fd5b50610662611a66565b6040518082815260200191505060405180910390f35b34801561068457600080fd5b506106b9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a71565b005b3480156106c757600080fd5b506106d0611bc0565b6040518082815260200191505060405180910390f35b3480156106f257600080fd5b506106fb611bd0565b6040518082815260200191505060405180910390f35b34801561071d57600080fd5b5061073c60048036038101908080359060200190929190505050611bd6565b604051808215151515815260200191505060405180910390f35b34801561076257600080fd5b5061076b611c28565b6040518082815260200191505060405180910390f35b34801561078d57600080fd5b50610796611c2f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156107e457600080fd5b50610843600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c55565b005b34801561085157600080fd5b50610886600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d22565b005b34801561089457600080fd5b506108c9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e71565b005b3480156108d757600080fd5b5061090c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f4b565b005b34801561091a57600080fd5b5061095760048036038101908080359060200190929190803590602001909291908035906020019092919080359060200190929190505050612026565b005b34801561096557600080fd5b5061096e612193565b005b34801561097c57600080fd5b5061099b6004803603810190808035906020019092919050505061238a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156109e957600080fd5b50610a1260048036038101908080359060200190929190803590602001909291905050506123bd565b604051808215151515815260200191505060405180910390f35b348015610a3857600080fd5b50610a5760048036038101908080359060200190929190505050612445565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610aa557600080fd5b50610ae260048036038101908080359060200190929190803590602001909291908035906020019092919080359060200190929190505050612478565b005b348015610af057600080fd5b50610b0f600480360381019080803590602001909291905050506125e4565b005b348015610b1d57600080fd5b50610b5c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061264a565b005b348015610b6a57600080fd5b50610b9f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506126d1565b005b348015610bad57600080fd5b50610bec60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506127ac565b005b348015610bfa57600080fd5b50610c19600480360381019080803590602001909291905050506128a6565b005b348015610c2757600080fd5b50610c306129fa565b604051808215151515815260200191505060405180910390f35b348015610c5657600080fd5b50610c5f612a0d565b005b348015610c6d57600080fd5b50610c8c60048036038101908080359060200190929190505050612af9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610cda57600080fd5b50610ce3612b72565b6040518082815260200191505060405180910390f35b348015610d0557600080fd5b50610d0e612b7d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610d5c57600080fd5b50610d91600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612ba3565b005b348015610d9f57600080fd5b50610dd4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612cf2565b6040518082815260200191505060405180910390f35b348015610df657600080fd5b50610e2b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612d3b565b005b348015610e3957600080fd5b50610e42612e58565b6040518082815260200191505060405180910390f35b348015610e6457600080fd5b50610e6d612e5e565b005b348015610e7b57600080fd5b50610eb0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612fa2565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610ef3578082015181840152602081019050610ed8565b505050509050019250505060405180910390f35b348015610f1357600080fd5b50610f32600480360381019080803590602001909291905050506130ef565b6040518082815260200191505060405180910390f35b348015610f5457600080fd5b50610f5d613526565b005b348015610f6b57600080fd5b50610f7461376f565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610fb4578082015181840152602081019050610f99565b50505050905090810190601f168015610fe15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610ffb57600080fd5b5061101a600480360381019080803590602001909291905050506137a8565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561104857600080fd5b50611067600480360381019080803590602001909291905050506137d7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156110b557600080fd5b506110f4600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061380a565b005b34801561110257600080fd5b5061110b61397b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561115957600080fd5b506111626139a1565b6040518082815260200191505060405180910390f35b34801561118457600080fd5b5061118d6139a7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156111db57600080fd5b506111fa600480360381019080803590602001909291905050506139cd565b005b34801561120857600080fd5b5061122760048036038101908080359060200190929190505050613b95565b604051808215151515815260200191505060405180910390f35b34801561124d57600080fd5b50611256613d04565b6040518082815260200191505060405180910390f35b34801561127857600080fd5b506112ad600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613d0f565b005b3480156112bb57600080fd5b506112c4613dae565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561131257600080fd5b5061133160048036038101908080359060200190929190505050613dd4565b604051808b1515151581526020018a1515151581526020018981526020018881526020018781526020018681526020018581526020018481526020018381526020018281526020019a505050505050505050505060405180910390f35b6113b66004803603810190808035906020019092919080359060200190929190505050613f35565b005b3480156113c457600080fd5b506113cd61413b565b6040518082815260200191505060405180910390f35b3480156113ef57600080fd5b506113f8614141565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6114626004803603810190808035906020019092919080359060200190929190505050614167565b005b600060405180807f737570706f727473496e74657266616365286279746573342900000000000000815250601901905060405180910390207bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061176e575060405180807f746f6b656e4d657461646174612875696e743235362c737472696e6729000000815250601d019050604051809103902060405180807f746f6b656e734f664f776e6572286164647265737329000000000000000000008152506016019050604051809103902060405180807f7472616e7366657246726f6d28616464726573732c616464726573732c75696e81526020017f74323536290000000000000000000000000000000000000000000000000000008152506025019050604051809103902060405180807f7472616e7366657228616464726573732c75696e7432353629000000000000008152506019019050604051809103902060405180807f617070726f766528616464726573732c75696e743235362900000000000000008152506018019050604051809103902060405180807f6f776e65724f662875696e7432353629000000000000000000000000000000008152506010019050604051809103902060405180807f62616c616e63654f6628616464726573732900000000000000000000000000008152506012019050604051809103902060405180807f746f74616c537570706c79282900000000000000000000000000000000000000815250600d019050604051809103902060405180807f73796d626f6c28290000000000000000000000000000000000000000000000008152506008019050604051809103902060405180807f6e616d6528290000000000000000000000000000000000000000000000000000815250600601905060405180910390201818181818181818187bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606117a56153f0565b60008073ffffffffffffffffffffffffffffffffffffffff16600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561180457600080fd5b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cb4799f28787876040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180848152602001806020018281038252848482818152602001925080828437820191505094505050505060a060405180830381600087803b1580156118b757600080fd5b505af11580156118cb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525060a08110156118f057600080fd5b8101908091908260800180519060200190929190505050809250819350505061191982826144a8565b925050509392505050565b60115481565b6040805190810160405280600d81526020017f43727970746f4b6974746965730000000000000000000000000000000000000081525081565b600260149054906101000a900460ff1615151561197f57600080fd5b6119893382614504565b151561199457600080fd5b61199e8183614570565b7f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925338383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b662386f26fc1000081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611ace57600080fd5b8190508073ffffffffffffffffffffffffffffffffffffffff166376190f8f6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611b3557600080fd5b505af1158015611b49573d6000803e3d6000fd5b505050506040513d6020811015611b5f57600080fd5b81019080805190602001909291905050501515611b7b57600080fd5b80600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000600160068054905003905090565b600f5481565b60008082111515611be657600080fd5b6000600683815481101515611bf757fe5b906000526020600020906002020160010160189054906101000a900463ffffffff1663ffffffff1614159050919050565b6201518081565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260149054906101000a900460ff16151515611c7157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611cad57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611ce857600080fd5b611cf233826145c6565b1515611cfd57600080fd5b611d078382614504565b1515611d1257600080fd5b611d1d838383614632565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611d7f57600080fd5b8190508073ffffffffffffffffffffffffffffffffffffffff166354c15b826040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611de657600080fd5b505af1158015611dfa573d6000803e3d6000fd5b505050506040513d6020811015611e1057600080fd5b81019080805190602001909291905050501515611e2c57600080fd5b80601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611ecc57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611f0857600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611fa657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611fe257600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260149054906101000a900460ff1615151561204257600080fd5b61204c3385614504565b151561205757600080fd5b61206084611bd6565b15151561206c57600080fd5b61209884600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16614570565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166327ebe40a85858585336040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050600060405180830381600087803b15801561217557600080fd5b505af1158015612189573d6000803e3d6000fd5b5050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156121ee57600080fd5b600260149054906101000a900460ff16151561220957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561226757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156122c557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561232357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561238057600080fd5b61238861486a565b565b600a6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600080851115156123d057600080fd5b6000841115156123df57600080fd5b6006858154811015156123ee57fe5b9060005260206000209060020201915060068481548110151561240d57fe5b90600052602060002090600202019050612429828683876148fd565b801561243b575061243a8486614b12565b5b9250505092915050565b60096020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260149054906101000a900460ff1615151561249457600080fd5b61249e3385614504565b15156124a957600080fd5b6124b284613b95565b15156124bd57600080fd5b6124e984600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16614570565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166327ebe40a85858585336040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050600060405180830381600087803b1580156125c657600080fd5b505af11580156125da573d6000803e3d6000fd5b5050505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561264057600080fd5b80600e8190555050565b600260149054906101000a900460ff1615151561266657600080fd5b6126703382614504565b151561267b57600080fd5b81600a600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561272c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561276857600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561280a57600080fd5b819050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561286857600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b66038d7ea4c6800060115410151561287f57600080fd5b6011600081548092919060010191905055506128a060008060008685614c25565b50505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061294e57506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806129a65750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b15156129b157600080fd5b60036000600e811015156129c157fe5b600891828204019190066004029054906101000a900463ffffffff1663ffffffff16811015156129f057600080fd5b8060058190555050565b600260149054906101000a900460ff1681565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612a6c57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff16319150600e546001600f540102905080821115612af557600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8284039081150290604051600060405180830381858888f19350505050505b5050565b60006007600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515612b6d57600080fd5b919050565b66038d7ea4c6800081565b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612c0057600080fd5b8190508073ffffffffffffffffffffffffffffffffffffffff166385b861886040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612c6757600080fd5b505af1158015612c7b573d6000803e3d6000fd5b505050506040513d6020811015612c9157600080fd5b81019080805190602001909291905050501515612cad57600080fd5b80600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612d9657600080fd5b600260149054906101000a900460ff161515612db157600080fd5b80601360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f450db8da6efbe9c22f2347f7c2021231df1fc58d3ae9a2fa75d39fa44619930581604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b60055481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480612f0657506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b80612f5e5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b1515612f6957600080fd5b600260149054906101000a900460ff16151515612f8557600080fd5b6001600260146101000a81548160ff021916908315150217905550565b6060600060606000806000612fb687612cf2565b94506000851415612ff9576000604051908082528060200260200182016040528015612ff15781602001602082028038833980820191505090505b5095506130e5565b846040519080825280602002602001820160405280156130285781602001602082028038833980820191505090505b509350613033611bc0565b925060009150600190505b82811115156130e1578673ffffffffffffffffffffffffffffffffffffffff166007600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156130d4578084838151811015156130bd57fe5b906020019060200201818152505081806001019250505b808060010191505061303e565b8395505b5050505050919050565b600080600080600080600080600260149054906101000a900460ff1615151561311757600080fd5b60068981548110151561312657fe5b9060005260206000209060020201965060008760010160009054906101000a900467ffffffffffffffff1667ffffffffffffffff161415151561316857600080fd5b61329e876101006040519081016040529081600082015481526020016001820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160109054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160149054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160189054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160018201601c9054906101000a900461ffff1661ffff1661ffff16815260200160018201601e9054906101000a900461ffff1661ffff1661ffff1681525050614f1c565b15156132a957600080fd5b8660010160189054906101000a900463ffffffff1663ffffffff1695506006868154811015156132d557fe5b9060005260206000209060020201945086600101601e9054906101000a900461ffff16935086600101601e9054906101000a900461ffff1661ffff1685600101601e9054906101000a900461ffff1661ffff1611156133445784600101601e9054906101000a900461ffff1693505b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d9f5aed8860000154876000015460018b60010160089054906101000a900467ffffffffffffffff16036040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018381526020018267ffffffffffffffff1681526020019350505050602060405180830381600087803b15801561341257600080fd5b505af1158015613426573d6000803e3d6000fd5b505050506040513d602081101561343c57600080fd5b81019080805190602001909291905050509250600760008a815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691506134b3898860010160189054906101000a900463ffffffff1663ffffffff166001870161ffff168686614c25565b90508660010160186101000a81549063ffffffff0219169055600f60008154809291906001900391905055503373ffffffffffffffffffffffffffffffffffffffff166108fc600e549081150290604051600060405180830381858888f193505050505080975050505050505050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806135ce57506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806136265750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b151561363157600080fd5b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635fd8c7106040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b1580156136b757600080fd5b505af11580156136cb573d6000803e3d6000fd5b50505050600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635fd8c7106040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561375557600080fd5b505af1158015613769573d6000803e3d6000fd5b50505050565b6040805190810160405280600281526020017f434b00000000000000000000000000000000000000000000000000000000000081525081565b600381600e811015156137b757fe5b60089182820401919006600402915054906101000a900463ffffffff1681565b60076020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260149054906101000a900460ff1615151561382657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561386257600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561389d57600080fd5b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156138fa57600080fd5b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561395757600080fd5b6139613382614504565b151561396c57600080fd5b613977338383614632565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600e5481565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515613a2b57600080fd5b66038d7ea4c68000601254101515613a4257600080fd5b613a5160008060008530614c25565b9050613a7f81600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16614570565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166327ebe40a82613ac6614f57565b600062015180306040518663ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808681526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200195505050505050600060405180830381600087803b158015613b6757600080fd5b505af1158015613b7b573d6000803e3d6000fd5b505050506012600081548092919060010191905055505050565b600080600083111515613ba757600080fd5b600683815481101515613bb657fe5b90600052602060002090600202019050613cfc816101006040519081016040529081600082015481526020016001820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160109054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160149054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160189054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160018201601c9054906101000a900461ffff1661ffff1661ffff16815260200160018201601e9054906101000a900461ffff1661ffff1661ffff1681525050615072565b915050919050565b66038d7ea4c6800081565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515613d6a57600080fd5b80600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600080600080600080600080600060068c815481101515613df457fe5b9060005260206000209060020201905060008160010160189054906101000a900463ffffffff1663ffffffff1614159a50438160010160089054906101000a900467ffffffffffffffff1667ffffffffffffffff161115995080600101601c9054906101000a900461ffff1661ffff1698508060010160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1697508060010160189054906101000a900463ffffffff1663ffffffff1696508060010160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1695508060010160109054906101000a900463ffffffff1663ffffffff1694508060010160149054906101000a900463ffffffff1663ffffffff16935080600101601e9054906101000a900461ffff1661ffff16925080600001549150509193959799509193959799565b6000600260149054906101000a900460ff16151515613f5357600080fd5b613f5d3383614504565b1515613f6857600080fd5b613f7182613b95565b1515613f7c57600080fd5b613f8682846150ac565b1515613f9157600080fd5b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55d0f56846040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b15801561402257600080fd5b505af1158015614036573d6000803e3d6000fd5b505050506040513d602081101561404c57600080fd5b81019080805190602001909291905050509050600e548101341015151561407257600080fd5b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663454a2ab3600e543403856040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808281526020019150506000604051808303818588803b15801561410757600080fd5b505af115801561411b573d6000803e3d6000fd5b50505050506141368263ffffffff168463ffffffff16615105565b505050565b60125481565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600260149054906101000a900460ff1615151561418657600080fd5b600e54341015151561419757600080fd5b6141a13385614504565b15156141ac57600080fd5b6141b68385614b12565b15156141c157600080fd5b6006848154811015156141d057fe5b90600052602060002090600202019150614316826101006040519081016040529081600082015481526020016001820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160109054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160149054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160189054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160018201601c9054906101000a900461ffff1661ffff1661ffff16815260200160018201601e9054906101000a900461ffff1661ffff1661ffff1681525050615072565b151561432157600080fd5b60068381548110151561433057fe5b90600052602060002090600202019050614476816101006040519081016040529081600082015481526020016001820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016001820160109054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160149054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820160189054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160018201601c9054906101000a900461ffff1661ffff1661ffff16815260200160018201601e9054906101000a900461ffff1661ffff1661ffff1681525050615072565b151561448157600080fd5b61448d828583866148fd565b151561449857600080fd5b6144a28484615105565b50505050565b606080600080846040519080825280601f01601f1916602001820160405280156144e15781602001602082028038833980820191505090505b5092506020830191508590506144f88282876152cf565b82935050505092915050565b60008273ffffffffffffffffffffffffffffffffffffffff166007600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b806009600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008273ffffffffffffffffffffffffffffffffffffffff166009600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816007600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415156147c657600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600190039190505550600a600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556009600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156148c557600080fd5b600260149054906101000a900460ff1615156148e057600080fd5b6000600260146101000a81548160ff021916908315150217905550565b6000818414156149105760009050614b0a565b818560010160109054906101000a900463ffffffff1663ffffffff1614806149515750818560010160149054906101000a900463ffffffff1663ffffffff16145b1561495f5760009050614b0a565b838360010160109054906101000a900463ffffffff1663ffffffff1614806149a05750838360010160149054906101000a900463ffffffff1663ffffffff16145b156149ae5760009050614b0a565b60008360010160109054906101000a900463ffffffff1663ffffffff1614806149f1575060008560010160109054906101000a900463ffffffff1663ffffffff16145b156149ff5760019050614b0a565b8460010160109054906101000a900463ffffffff1663ffffffff168360010160109054906101000a900463ffffffff1663ffffffff161480614a7457508460010160149054906101000a900463ffffffff1663ffffffff168360010160109054906101000a900463ffffffff1663ffffffff16145b15614a825760009050614b0a565b8460010160109054906101000a900463ffffffff1663ffffffff168360010160149054906101000a900463ffffffff1663ffffffff161480614af757508460010160149054906101000a900463ffffffff1663ffffffff168360010160149054906101000a900463ffffffff1663ffffffff16145b15614b055760009050614b0a565b600190505b949350505050565b60008060006007600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691506007600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161480614c1b57508173ffffffffffffffffffffffffffffffffffffffff16600a600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b9250505092915050565b600080614c30615413565b60008863ffffffff1689141515614c4657600080fd5b8763ffffffff1688141515614c5a57600080fd5b8661ffff1687141515614c6c57600080fd5b600287811515614c7857fe5b049250600d8361ffff161115614c8d57600d92505b610100604051908101604052808781526020014267ffffffffffffffff168152602001600067ffffffffffffffff1681526020018a63ffffffff1681526020018963ffffffff168152602001600063ffffffff1681526020018461ffff1681526020018861ffff1681525091506001600683908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060408201518160010160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060608201518160010160106101000a81548163ffffffff021916908363ffffffff16021790555060808201518160010160146101000a81548163ffffffff021916908363ffffffff16021790555060a08201518160010160186101000a81548163ffffffff021916908363ffffffff16021790555060c082015181600101601c6101000a81548161ffff021916908361ffff16021790555060e082015181600101601e6101000a81548161ffff021916908361ffff16021790555050500390508063ffffffff1681141515614e6657600080fd5b7f0a5311bd2a6608f08a180df2ee7c5946819a649b204b554bb8e39825b2c50ad58582846060015163ffffffff16856080015163ffffffff168660000151604051808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018381526020018281526020019550505050505060405180910390a1614f0d60008683614632565b80935050505095945050505050565b6000808260a0015163ffffffff1614158015614f5057504367ffffffffffffffff16826040015167ffffffffffffffff1611155b9050919050565b6000806000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663eac9d94c6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015614fe257600080fd5b505af1158015614ff6573d6000803e3d6000fd5b505050506040513d602081101561500c57600080fd5b81019080805190602001909291905050509150816fffffffffffffffffffffffffffffffff168214151561503f57600080fd5b60028281151561504b57fe5b0482019050662386f26fc1000081101561506a57662386f26fc1000090505b809250505090565b6000808260a0015163ffffffff161480156150a557504367ffffffffffffffff16826040015167ffffffffffffffff1611155b9050919050565b60008060006006858154811015156150c057fe5b906000526020600020906002020191506006848154811015156150df57fe5b906000526020600020906002020190506150fb828683876148fd565b9250505092915050565b60008060068381548110151561511757fe5b9060005260206000209060020201915060068481548110151561513657fe5b90600052602060002090600202019050828160010160186101000a81548163ffffffff021916908363ffffffff1602179055506151728261531a565b61517b8161531a565b600a600085815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600a600084815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600f600081548092919060010191905055507f241ea03ca20251805084d27d4440371c34a0b85ff108f6bb5611248f73818b806007600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685858460010160089054906101000a900467ffffffffffffffff16604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018267ffffffffffffffff16815260200194505050505060405180910390a150505050565b60005b6020821015156152f757825184526020840193506020830192506020820391506152d2565b6001826020036101000a0390508019835116818551168181178652505050505050565b43600554600383600101601c9054906101000a900461ffff1661ffff16600e8110151561534357fe5b600891828204019190066004029054906101000a900463ffffffff1663ffffffff1681151561536e57fe5b04018160010160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550600d81600101601c9054906101000a900461ffff1661ffff1610156153ed57600181600101601c8282829054906101000a900461ffff160192506101000a81548161ffff021916908361ffff1602179055505b50565b608060405190810160405280600490602082028038833980820191505090505090565b6101006040519081016040528060008152602001600067ffffffffffffffff168152602001600067ffffffffffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600061ffff168152602001600061ffff16815250905600a165627a7a7230582074101fdee3a27f09dc27b0956e0fad85f91cd03386f09c823d5ec3f89131455e0029",
  "sourceMap": "313:6252:9:-;;;1794:5:5;1773:26;;;;;;;;;;;;;;;;;;;;3747:308:7;;;;;;;;;3788:9;3747:308;;;;;;;;3809:9;3747:308;;;;;;;;3830:9;3747:308;;;;;;;;3851:10;3747:308;;;;;;;;3873:10;3747:308;;;;;;;;3895:7;3747:308;;;;;;;;3914:7;3747:308;;;;;;;;3933:7;3747:308;;;;;;;;3952:7;3747:308;;;;;;;;3971:8;3747:308;;;;;;;;3991:6;3747:308;;;;;;;;4009:6;3747:308;;;;;;;;4027:6;3747:308;;;;;;;;4045:6;3747:308;;;;;;;;;;;;;;;:::i;:::-;;4166:2;4133:35;;848:8:8;818:38;;3400:369:9;8:9:-1;5:2;;;30:1;27;20:12;5:2;3400:369:9;3461:4;3452:6;;:13;;;;;;;;;;;;;;;;;;3535:10;3522;;:23;;;;;;;;;;;;;;;;;;3620:10;3607;;:23;;;;;;;;;;;;;;;;;;3719:46;3732:1;3735;3738;3749:2;3762:1;3719:12;;;:46;;;:::i;:::-;;313:6252;;7482:1557:7;7626:4;8153:20;8259:19;;:::i;:::-;8514;7971:9;7956:26;;7943:9;:39;7935:48;;;;;;;;8021:7;8006:24;;7995:7;:35;7987:44;;;;;;;;8073:11;8058:28;;8043:11;:43;8035:52;;;;;;;;8197:1;8183:11;:15;;;;;;;;8153:46;;8223:2;8207:13;:18;;;8203:52;;;8248:2;8232:18;;8203:52;8281:229;;;;;;;;;8299:6;8281:229;;;;8328:3;8281:229;;;;;;8355:1;8281:229;;;;;;8378:9;8281:229;;;;;;8408:7;8281:229;;;;;;8435:1;8281:229;;;;;;8456:13;8281:229;;;;;;8493:11;8281:229;;;;;8259:251;;8559:1;8536:7;8549:6;8536:20;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;8536:20:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:24;8514:46;;8729:11;8714:28;;8699:11;:43;8691:52;;;;;;;;8774:109;8784:6;8795:11;8819:6;:15;;;8811:24;;8848:6;:13;;;8840:22;;8867:6;:12;;;8774:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8979:33;8989:1;8992:6;9000:11;8979:9;;;:33;;;:::i;:::-;9024:11;9017:18;;7482:1557;;;;;;;;;;:::o;6198:656::-;6350:19;:24;6370:3;6350:24;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;6434:3;6404:17;:27;6422:8;6404:27;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;6542:1;6525:19;;:5;:19;;;;6521:266;;;6551:19;:26;6571:5;6551:26;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;6655:20;:30;6676:8;6655:30;;;;;;;;;;;;6648:37;;;;;;;;;;;6752:20;:30;6773:8;6752:30;;;;;;;;;;;;6745:37;;;;;;;;;;;6521:266;6820:30;6829:5;6836:3;6841:8;6820:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6198:656;;;:::o;313:6252:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "313:6252:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4632:11;;;;;;;;;;;4610:34;;:10;:34;;;:77;;;;4673:13;;;;;;;;;;;4651:36;;:10;:36;;;4610:77;4598:93;;;;;;;;313:6252;1553:303:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1553:303:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1619:25:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1619:25:5;;;;;;;;;;;;;;;;;;;;;;;;;;;10047:313:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10047:313:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10047:313:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;560:32:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;560:32:10;;;;;;;;;;;;;;;;;;;;;;;553:45:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;553:45:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;553:45:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5461:329;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5461:329:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1591:25:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1591:25:5;;;;;;;;;;;;;;;;;;;;;;;;;;;382:55:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;382:55:10;;;;;;;;;;;;;;;;;;;;;;;1222:444:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1222:444:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;7034:83:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7034:83:11;;;;;;;;;;;;;;;;;;;;;;;907:30:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;907:30:8;;;;;;;;;;;;;;;;;;;;;;;5276:202;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5276:202:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;440:54:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;440:54:10;;;;;;;;;;;;;;;;;;;;;;;6092:39:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6092:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;6233:682:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6233:682:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1299:437:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1299:437:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;2439:113:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2439:113:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;2937;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2937:113:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;1772:816:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1772:816:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5918:266:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5918:266:9;;;;;;5546:56:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5546:56:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7651:338:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7651:338:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:56:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5240:56:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2737:652:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2737:652:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4387:81:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4387:81:8;;;;;;;;;;;;;;;;;;;;;;;;;;4016:165;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4016:165:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2688:113:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2688:113:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:298:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;877:298:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9118:124:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9118:124:7;;;;;;;;;;;;;;;;;;;;;;;;;;1773:26:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1773:26:5;;;;;;;;;;;;;;;;;;;;;;;;;;;6261:302:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6261:302:9;;;;;;7243:153:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7243:153:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;283:62:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;283:62:10;;;;;;;;;;;;;;;;;;;;;;;3294:33:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3294:33:9;;;;;;;;;;;;;;;;;;;;;;;;;;;682:434:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;682:434:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;3668:113:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3668:113:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4210:178:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4210:178:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;4133:35:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4133:35:7;;;;;;;;;;;;;;;;;;;;;;;3505:72:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3505:72:5;;;;;;7831:673:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7831:673:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;7831:673:11;;;;;;;;;;;;;;;;;11735:1400:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11735:1400:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4422:127:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4422:127:6;;;;;;601:36:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;601:36:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;601:36:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3747:308:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3747:308:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4761:53;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4761:53:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4185:873:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4185:873:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1647:25:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1647:25:5;;;;;;;;;;;;;;;;;;;;;;;;;;;818:38:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;818:38:8;;;;;;;;;;;;;;;;;;;;;;;690:36:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;690:36:11;;;;;;;;;;;;;;;;;;;;;;;;;;;1271:363:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1271:363:10;;;;;;;;;;;;;;;;;;;;;;;;;;4960:174:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4960:174:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;217:63:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;217:63:10;;;;;;;;;;;;;;;;;;;;;;;1947:126:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1947:126:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;5815:35:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5815:35:7;;;;;;;;;;;;;;;;;;;;;;;;;;;4821:757:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4821:757:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3622:613:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;595:31:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;595:31:10;;;;;;;;;;;;;;;;;;;;;;;1068:39:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1068:39:8;;;;;;;;;;;;;;;;;;;;;;;;;;;9424:1701;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1553:303:11;1624:4;783:38;;;;;;;;;;;;;;;;;;;1762:41;;;:12;:41;;;;1761:90;;;;1273:42;;;;;;;;;;;;;;;;;;;1226:35;;;;;;;;;;;;;;;;;;;1164:50;;;;;;;;;;;;;;;;;;;;;;;;1114:38;;;;;;;;;;;;;;;;;;;1065:37;;;;;;;;;;;;;;;;;;;1024:29;;;;;;;;;;;;;;;;;;;981:31;;;;;;;;;;;;;;;;;;;943:26;;;;;;;;;;;;;;;;;;;910:21;;;;;;;;;;;;;;;;;;;879:19;;;;;;;;;;;;;;;;;;;872:60;:98;:141;:182;:231;:281;:343;:390;:444;1809:41;;;:12;:41;;;;1761:90;1753:99;;1553:303;;;:::o;1619:25:5:-;;;;;;;;;;;;;:::o;10047:313:11:-;10139:14;10200:24;;:::i;:::-;10228:13;10193:1;10167:28;;:14;;;;;;;;;;;:28;;;;10159:37;;;;;;;;10263:14;;;;;;;;;;;:26;;;10290:8;10300:19;;10263:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10263:57:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10263:57:11;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:3;8;5:12;2:2;;;30:1;27;20:12;2:2;10263:57:11;;;;;;;;;;;;;;;;;;;;;10245:75;;;;;;;;10332:24;10342:6;10350:5;10332:9;:24::i;:::-;10325:31;;10047:313;;;;;;;:::o;560:32:10:-;;;;:::o;553:45:11:-;;;;;;;;;;;;;;;;;;;;:::o;5461:329::-;3225:6:5;;;;;;;;;;;3224:7;3216:16;;;;;;;;5602:27:11;5608:10;5620:8;5602:5;:27::i;:::-;5594:36;;;;;;;;5697:23;5706:8;5716:3;5697:8;:23::i;:::-;5751:35;5760:10;5772:3;5777:8;5751:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5461:329;;:::o;1591:25:5:-;;;;;;;;;;;;;:::o;382:55:10:-;428:9;382:55;:::o;1222:444:6:-;1294:36;1901:10:5;;;;;;;;;;;1887:24;;:10;:24;;;1879:33;;;;;;;;1352:8:6;1294:67;;1549:17;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1549:40:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1549:40:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1549:40:6;;;;;;;;;;;;;;;;1541:49;;;;;;;;1645:17;1629:13;;:33;;;;;;;;;;;;;;;;;;1222:444;;:::o;7034:83:11:-;7078:4;7112:1;7095:7;:14;;;;:18;7088:25;;7034:83;:::o;907:30:8:-;;;;:::o;5276:202::-;5338:4;5368:1;5357:8;:12;5349:21;;;;;;;;5473:1;5439:7;5447:8;5439:17;;;;;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;:35;;;;5432:42;;5276:202;;;:::o;440:54:10:-;488:6;440:54;:::o;6092:39:7:-;;;;;;;;;;;;;:::o;6233:682:11:-;3225:6:5;;;;;;;;;;;3224:7;3216:16;;;;;;;;6427:1:11;6412:17;;:3;:17;;;;6404:26;;;;;;;;6661:4;6646:20;;:3;:20;;;;6638:29;;;;;;;;6723:34;6736:10;6748:8;6723:12;:34::i;:::-;6715:43;;;;;;;;6770:22;6776:5;6783:8;6770:5;:22::i;:::-;6762:31;;;;;;;;6880;6890:5;6897:3;6902:8;6880:9;:31::i;:::-;6233:682;;;:::o;1299:437:8:-;1369:38;1901:10:5;;;;;;;;;;;1887:24;;:10;:24;;;1879:33;;;;;;;;1431:8:8;1369:71;;1628:17;:31;;;:33;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1628:33:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1628:33:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1628:33:8;;;;;;;;;;;;;;;;1620:42;;;;;;;;1715:17;1701:11;;:31;;;;;;;;;;;;;;;;;;1299:437;;:::o;2439:113:5:-;1901:10;;;;;;;;;;;1887:24;;:10;:24;;;1879:33;;;;;;;;2520:1;2501:21;;:7;:21;;;;2493:30;;;;;;;;2541:7;2528:10;;:20;;;;;;;;;;;;;;;;;;2439:113;:::o;2937:::-;1901:10;;;;;;;;;;;1887:24;;:10;:24;;;1879:33;;;;;;;;3018:1;2999:21;;:7;:21;;;;2991:30;;;;;;;;3039:7;3026:10;;:20;;;;;;;;;;;;;;;;;;2937:113;:::o;1772:816:6:-;3225:6:5;;;;;;;;;;;3224:7;3216:16;;;;;;;;2084:27:6;2090:10;2102:8;2084:5;:27::i;:::-;2076:36;;;;;;;;2300:20;2311:8;2300:10;:20::i;:::-;2299:21;2291:30;;;;;;;;2325:31;2334:8;2344:11;;;;;;;;;;;2325:8;:31::i;:::-;2477:11;;;;;;;;;;;:25;;;2507:8;2520:14;2539:12;2556:9;2570:10;2477:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2477:107:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2477:107:6;;;;1772:816;;;;:::o;5918:266:9:-;1901:10:5;;;;;;;;;;;1887:24;;:10;:24;;;1879:33;;;;;;;;3345:6;;;;;;;;;;;3337:15;;;;;;;;5998:1:9;5975:25;;:11;;;;;;;;;;;:25;;;;5967:34;;;;;;;;6038:1;6013:27;;:13;;;;;;;;;;;:27;;;;6005:36;;;;;;;;6076:1;6053:25;;:11;;;;;;;;;;;:25;;;;6045:34;;;;;;;;6121:1;6091:32;;:18;;;;;;;;;;;:32;;;6083:41;;;;;;;;6165:15;:13;:15::i;:::-;5918:266::o;5546:56:7:-;;;;;;;;;;;;;;;;;;;;;;:::o;7651:338:8:-;7734:4;7795:20;7840:18;7765:1;7753:9;:13;7745:22;;;;;;;;7789:1;7779:7;:11;7771:20;;;;;;;;7818:7;7826:9;7818:18;;;;;;;;;;;;;;;;;;;;7795:41;;7861:7;7869;7861:16;;;;;;;;;;;;;;;;;;;;7840:37;;7888:52;7907:6;7915:9;7926:4;7932:7;7888:18;:52::i;:::-;:97;;;;;7947:38;7966:7;7975:9;7947:18;:38::i;:::-;7888:97;7881:104;;7651:338;;;;;;:::o;5240:56:7:-;;;;;;;;;;;;;;;;;;;;;;:::o;2737:652:6:-;3225:6:5;;;;;;;;;;;3224:7;3216:16;;;;;;;;3051:27:6;3057:10;3069:8;3051:5;:27::i;:::-;3043:36;;;;;;;;3091:24;3106:8;3091:14;:24::i;:::-;3083:33;;;;;;;;3120;3129:8;3139:13;;;;;;;;;;;3120:8;:33::i;:::-;3276:13;;;;;;;;;;;:27;;;3308:8;3321:14;3340:12;3357:9;3371:10;3276:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3276:109:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3276:109:6;;;;2737:652;;;;:::o;4387:81:8:-;2143:10:5;;;;;;;;;;;2129:24;;:10;:24;;;2121:33;;;;;;;;4461:3:8;4446:12;:18;;;;4387:81;:::o;4016:165::-;3225:6:5;;;;;;;;;;;3224:7;3216:16;;;;;;;;4109:26:8;4115:10;4127:7;4109:5;:26::i;:::-;4101:35;;;;;;;;4172:5;4140:20;:29;4161:7;4140:29;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;4016:165;;:::o;2688:113:5:-;1901:10;;;;;;;;;;;1887:24;;:10;:24;;;1879:33;;;;;;;;2769:1;2750:21;;:7;:21;;;;2742:30;;;;;;;;2790:7;2777:10;;:20;;;;;;;;;;;;;;;;;;2688:113;:::o;877:298:10:-;956:18;2143:10:5;;;;;;;;;;;2129:24;;:10;:24;;;2121:33;;;;;;;;977:6:10;956:27;;1013:1;991:24;;:10;:24;;;987:63;;;1035:10;;;;;;;;;;;1022:23;;987:63;264:16;1061:17;;:40;1053:49;;;;;;;;1107:17;;:19;;;;;;;;;;;;;1130:41;1143:1;1146;1149;1152:6;1160:10;1130:12;:41::i;:::-;;877:298;;;:::o;9118:124:7:-;2218:10:5;;;;;;;;;;;2204:24;;:10;:24;;;:55;;;;2249:10;;;;;;;;;;;2235:24;;:10;:24;;;2204:55;:86;;;;2280:10;;;;;;;;;;;2266:24;;:10;:24;;;2204:86;2192:102;;;;;;;;9199:9:7;9209:1;9199:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9192:19;;:4;:19;9184:28;;;;;;;;9234:4;9216:15;:22;;;;9118:124;:::o;1773:26:5:-;;;;;;;;;;;;;:::o;6261:302:9:-;6309:15;6419:20;2022:10:5;;;;;;;;;;;2008:24;;:10;:24;;;2000:33;;;;;;;;6327:4:9;:12;;;6309:30;;6466:12;;6461:1;6443:15;;:19;6442:36;6419:59;;6497:12;6487:7;:22;6483:77;;;6516:10;;;;;;;;;;;:15;;:39;6542:12;6532:7;:22;6516:39;;;;;;;;;;;;;;;;;;;;;;;;6483:77;6261:302;;:::o;7243:153:11:-;7304:13;7332:17;:27;7350:8;7332:27;;;;;;;;;;;;;;;;;;;;;7324:35;;7389:1;7372:19;;:5;:19;;;;7364:28;;;;;;;;7243:153;;;:::o;283:62:10:-;329:16;283:62;:::o;3294:33:9:-;;;;;;;;;;;;;:::o;682:434:6:-;752:34;1901:10:5;;;;;;;;;;;1887:24;;:10;:24;;;1879:33;;;;;;;;806:8:6;752:63;;1003:17;:36;;;:38;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1003:38:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1003:38:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1003:38:6;;;;;;;;;;;;;;;;995:47;;;;;;;;1095:17;1081:11;;:31;;;;;;;;;;;;;;;;;;682:434;;:::o;3668:113:11:-;3724:13;3750:19;:27;3770:6;3750:27;;;;;;;;;;;;;;;;3743:34;;3668:113;;;:::o;4210:178:9:-;1901:10:5;;;;;;;;;;;1887:24;;:10;:24;;;1879:33;;;;;;;;3345:6;;;;;;;;;;;3337:15;;;;;;;;4343:10:9;4322:18;;:31;;;;;;;;;;;;;;;;;;4357:27;4373:10;4357:27;;;;;;;;;;;;;;;;;;;;;;4210:178;:::o;4133:35:7:-;;;;:::o;3505:72:5:-;2218:10;;;;;;;;;;;2204:24;;:10;:24;;;:55;;;;2249:10;;;;;;;;;;;2235:24;;:10;:24;;;2204:55;:86;;;;2280:10;;;;;;;;;;;2266:24;;:10;:24;;;2204:86;2192:102;;;;;;;;3225:6;;;;;;;;;;;3224:7;3216:16;;;;;;;;3569:4;3560:6;;:13;;;;;;;;;;;;;;;;;;3505:72::o;7831:673:11:-;7892:21;7919:18;8055:23;8111:17;8149:19;8302:13;7940:17;7950:6;7940:9;:17::i;:::-;7919:38;;7980:1;7966:10;:15;7962:539;;;8037:1;8023:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;8023:16:11;;;;8016:23;;;;7962:539;8095:10;8081:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;8081:25:11;;;;8055:51;;8131:13;:11;:13::i;:::-;8111:33;;8171:1;8149:23;;8334:1;8326:9;;8321:157;8346:9;8337:5;:18;;8321:157;;;8404:6;8376:34;;:17;:24;8394:5;8376:24;;;;;;;;;;;;;;;;;;;;;:34;;;8372:101;;;8441:5;8419:6;8426:11;8419:19;;;;;;;;;;;;;;;;;:27;;;;;8453:13;;;;;;;8372:101;8357:7;;;;;;;8321:157;;;8490:6;8483:13;;7831:673;;;;;;;;;:::o;11735:1400:8:-;11807:7;11869:20;12148:14;12188:18;12292:16;12465:18;12592:13;12640:16;3225:6:5;;;;;;;;;;;3224:7;3216:16;;;;;;;;11892:7:8;11900:9;11892:18;;;;;;;;;;;;;;;;;;;;11869:41;;11986:1;11966:6;:16;;;;;;;;;;;;:21;;;;11958:30;;;;;;;;12069:27;12089:6;12069:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:19;:27::i;:::-;12061:36;;;;;;;;12165:6;:19;;;;;;;;;;;;12148:36;;;;12209:7;12217:6;12209:15;;;;;;;;;;;;;;;;;;;;12188:36;;12311:6;:17;;;;;;;;;;;;12292:36;;12354:6;:17;;;;;;;;;;;;12336:35;;:4;:15;;;;;;;;;;;;:35;;;12332:78;;;12390:4;:15;;;;;;;;;;;;12378:27;;12332:78;12486:11;;;;;;;;;;;:20;;;12507:6;:12;;;12521:4;:10;;;12559:1;12533:6;:23;;;;;;;;;;;;:27;12486:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12486:75:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12486:75:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12486:75:8;;;;;;;;;;;;;;;;12465:96;;12608:17;:28;12626:9;12608:28;;;;;;;;;;;;;;;;;;;;;12592:44;;12659:78;12672:9;12683:6;:19;;;;;;;;;;;;12659:78;;12716:1;12704:9;:13;12659:78;;12719:10;12731:5;12659:12;:78::i;:::-;12640:97;;12881:6;:19;;;12874:26;;;;;;;;;;;12965:15;;:17;;;;;;;;;;;;;;13050:10;:15;;:29;13066:12;;13050:29;;;;;;;;;;;;;;;;;;;;;;;;13123:8;13116:15;;11735:1400;;;;;;;;;;:::o;4422:127:6:-;2218:10:5;;;;;;;;;;;2204:24;;:10;:24;;;:55;;;;2249:10;;;;;;;;;;;2235:24;;:10;:24;;;2204:55;:86;;;;2280:10;;;;;;;;;;;2266:24;;:10;:24;;;2204:86;2192:102;;;;;;;;4481:11:6;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4481:29:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4481:29:6;;;;4514:13;;;;;;;;;;;:29;;;:31;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4514:31:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4514:31:6;;;;4422:127::o;601:36:11:-;;;;;;;;;;;;;;;;;;;;:::o;3747:308:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4761:53::-;;;;;;;;;;;;;;;;;;;;;;:::o;4185:873:11:-;3225:6:5;;;;;;;;;;;3224:7;3216:16;;;;;;;;4358:1:11;4343:17;;:3;:17;;;;4335:26;;;;;;;;4592:4;4577:20;;:3;:20;;;;4569:29;;;;;;;;4809:11;;;;;;;;;;;4794:27;;:3;:27;;;;4786:36;;;;;;;;4849:13;;;;;;;;;;;4834:29;;:3;:29;;;;4826:38;;;;;;;;4914:27;4920:10;4932:8;4914:5;:27::i;:::-;4906:36;;;;;;;;5018;5028:10;5040:3;5045:8;5018:9;:36::i;:::-;4185:873;;:::o;1647:25:5:-;;;;;;;;;;;;;:::o;818:38:8:-;;;;:::o;690:36:11:-;;;;;;;;;;;;;:::o;1271:363:10:-;1387:15;2143:10:5;;;;;;;;;;;2129:24;;:10;:24;;;2121:33;;;;;;;;329:16:10;1343;;:38;1335:47;;;;;;;;1405:44;1418:1;1421;1424;1427:6;1443:4;1405:12;:44::i;:::-;1387:62;;1453:30;1462:7;1471:11;;;;;;;;;;;1453:8;:30::i;:::-;1488:11;;;;;;;;;;;:25;;;1518:7;1530:23;:21;:23::i;:::-;1558:1;488:6;1598:4;1488:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1488:119:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1488:119:10;;;;1612:16;;:18;;;;;;;;;;;;;1271:363;;:::o;4960:174:8:-;5026:4;5062:17;5056:1;5045:8;:12;5037:21;;;;;;;;5082:7;5090:8;5082:17;;;;;;;;;;;;;;;;;;;;5062:37;;5110:20;5126:3;5110:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:15;:20::i;:::-;5103:27;;4960:174;;;;:::o;217:63:10:-;264:16;217:63;:::o;1947:126:11:-;1901:10:5;;;;;;;;;;;1887:24;;:10;:24;;;1879:33;;;;;;;;2052:16:11;2020:14;;:49;;;;;;;;;;;;;;;;;;1947:126;:::o;5815:35:7:-;;;;;;;;;;;;;:::o;4821:757:9:-;4881:16;4901:12;4917:21;4942:20;4966;4990:17;5011:16;5031:14;5049:18;5071:13;5092:17;5112:7;5120:3;5112:12;;;;;;;;;;;;;;;;;;;;5092:32;;5215:1;5195:3;:16;;;;;;;;;;;;:21;;;;5180:37;;5256:12;5232:3;:20;;;;;;;;;;;;:36;;;;5221:48;;5297:3;:17;;;;;;;;;;;;5289:26;;5273:42;;5342:3;:20;;;;;;;;;;;;5334:29;;5319:44;;5390:3;:16;;;;;;;;;;;;5382:25;;5367:40;;5431:3;:13;;;;;;;;;;;;5423:22;;5411:34;;5468:3;:12;;;;;;;;;;;;5460:21;;5449:32;;5502:3;:10;;;;;;;;;;;;5494:19;;5485:28;;5538:3;:14;;;;;;;;;;;;5530:23;;5517:36;;5565:3;:9;;;5557:17;;4821:757;;;;;;;;;;;;:::o;3622:613:6:-;3955:20;3225:6:5;;;;;;;;;;;3224:7;3216:16;;;;;;;;3781:28:6;3787:10;3799:9;3781:5;:28::i;:::-;3773:37;;;;;;;;3822:25;3837:9;3822:14;:25::i;:::-;3814:34;;;;;;;;3860:43;3884:9;3895:7;3860:23;:43::i;:::-;3852:52;;;;;;;;3978:13;;;;;;;;;;;:29;;;4008:7;3978:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3978:38:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3978:38:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3978:38:6;;;;;;;;;;;;;;;;3955:61;;4056:12;;4041;:27;4028:9;:40;;4020:49;;;;;;;;4123:13;;;;;;;;;;;:17;;;4159:12;;4147:9;:24;4173:7;4123:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4123:58:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4123:58:6;;;;;4185:46;4203:9;4185:46;;4222:7;4185:46;;:10;:46::i;:::-;3622:613;;;:::o;595:31:10:-;;;;:::o;1068:39:8:-;;;;;;;;;;;;;:::o;9424:1701::-;10559:20;10762:18;3225:6:5;;;;;;;;;;;3224:7;3216:16;;;;;;;;9568:12:8;;9555:9;:25;;9547:34;;;;;;;;9627:28;9633:10;9645:9;9627:5;:28::i;:::-;9619:37;;;;;;;;10469:38;10488:7;10497:9;10469:18;:38::i;:::-;10461:47;;;;;;;;10582:7;10590:9;10582:18;;;;;;;;;;;;;;;;;;;;10559:41;;10689:23;10705:6;10689:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:15;:23::i;:::-;10681:32;;;;;;;;10783:7;10791;10783:16;;;;;;;;;;;;;;;;;;;;10762:37;;10886:21;10902:4;10886:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:15;:21::i;:::-;10878:30;;;;;;;;10972:68;10995:6;11006:9;11020:4;11029:7;10972:18;:68::i;:::-;10964:77;;;;;;;;11091:30;11102:9;11113:7;11091:10;:30::i;:::-;9424:1701;;;;:::o;9474:340:11:-;9560:6;9572:16;9620:17;9641:16;9602:13;9591:25;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;9591:25:11;;;;9572:44;;9707:2;9693:12;9689:21;9676:34;;9726:9;9714:21;;9743:43;9751:9;9762:8;9772:13;9743:7;:43::i;:::-;9798:12;9791:19;;9474:340;;;;;;;:::o;2461:136::-;2536:4;2584:9;2553:40;;:17;:27;2571:8;2553:27;;;;;;;;;;;;;;;;;;;;;:40;;;2546:47;;2461:136;;;;:::o;3390:114::-;3491:9;3458:20;:30;3479:8;3458:30;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;3390:114;;:::o;2819:146::-;2901:4;2952:9;2918:43;;:20;:30;2939:8;2918:30;;;;;;;;;;;;;;;;;;;;;:43;;;2911:50;;2819:146;;;;:::o;6198:656:7:-;6350:19;:24;6370:3;6350:24;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;6434:3;6404:17;:27;6422:8;6404:27;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;6542:1;6525:19;;:5;:19;;;;6521:266;;;6551:19;:26;6571:5;6551:26;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;6655:20;:30;6676:8;6655:30;;;;;;;;;;;;6648:37;;;;;;;;;;;6752:20;:30;6773:8;6752:30;;;;;;;;;;;;6745:37;;;;;;;;;;;6521:266;6820:30;6829:5;6836:3;6841:8;6820:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6198:656;;;:::o;3847:111:5:-;1901:10;;;;;;;;;;;1887:24;;:10;:24;;;1879:33;;;;;;;;3345:6;;;;;;;;;;;3337:15;;;;;;;;3949:5;3940:6;;:14;;;;;;;;;;;;;;;;;;3847:111::o;5859:959:8:-;6002:4;6068:7;6055:9;:20;6051:48;;;6089:5;6082:12;;;;6051:48;6172:7;6152;:16;;;;;;;;;;;;:27;;;:56;;;;6201:7;6183;:14;;;;;;;;;;;;:25;;;6152:56;6148:84;;;6222:5;6215:12;;;;6148:84;6257:9;6239:5;:14;;;;;;;;;;;;:27;;;:56;;;;6286:9;6270:5;:12;;;;;;;;;;;;:25;;;6239:56;6235:84;;;6309:5;6302:12;;;;6235:84;6455:1;6437:5;:14;;;;;;;;;;;;:19;;;:44;;;;6480:1;6460:7;:16;;;;;;;;;;;;:21;;;6437:44;6433:71;;;6495:4;6488:11;;;;6433:71;6583:7;:16;;;;;;;;;;;;6565:34;;:5;:14;;;;;;;;;;;;:34;;;:70;;;;6621:7;:14;;;;;;;;;;;;6603:32;;:5;:14;;;;;;;;;;;;:32;;;6565:70;6561:98;;;6649:5;6642:12;;;;6561:98;6682:7;:16;;;;;;;;;;;;6666:32;;:5;:12;;;;;;;;;;;;:32;;;:66;;;;6718:7;:14;;;;;;;;;;;;6702:30;;:5;:12;;;;;;;;;;;;:30;;;6666:66;6662:94;;;6746:5;6739:12;;;;6662:94;6810:4;6803:11;;5859:959;;;;;;;:::o;2508:408::-;2595:4;2605:19;2659:17;2627;:28;2645:9;2627:28;;;;;;;;;;;;;;;;;;;;;2605:50;;2679:17;:26;2697:7;2679:26;;;;;;;;;;;;;;;;;;;;;2659:46;;2854:9;2839:24;;:11;:24;;;:72;;;;2900:11;2867:44;;:20;:29;2888:7;2867:29;;;;;;;;;;;;;;;;;;;;;:44;;;2839:72;2831:81;;2508:408;;;;;;:::o;7482:1557:7:-;7626:4;8153:20;8259:19;;:::i;:::-;8514;7971:9;7956:26;;7943:9;:39;7935:48;;;;;;;;8021:7;8006:24;;7995:7;:35;7987:44;;;;;;;;8073:11;8058:28;;8043:11;:43;8035:52;;;;;;;;8197:1;8183:11;:15;;;;;;;;8153:46;;8223:2;8207:13;:18;;;8203:52;;;8248:2;8232:18;;8203:52;8281:229;;;;;;;;;8299:6;8281:229;;;;8328:3;8281:229;;;;;;8355:1;8281:229;;;;;;8378:9;8281:229;;;;;;8408:7;8281:229;;;;;;8435:1;8281:229;;;;;;8456:13;8281:229;;;;;;8493:11;8281:229;;;;;8259:251;;8559:1;8536:7;8549:6;8536:20;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;8536:20:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:24;8514:46;;8729:11;8714:28;;8699:11;:43;8691:52;;;;;;;;8774:109;8784:6;8795:11;8819:6;:15;;;8811:24;;8848:6;:13;;;8840:22;;8867:6;:12;;;8774:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8979:33;8989:1;8992:6;9000:11;8979:9;:33::i;:::-;9024:11;9017:18;;7482:1557;;;;;;;;;;:::o;4578:168:8:-;4644:4;4686:1;4662:7;:20;;;:25;;;;4661:81;;;;;4728:12;4693:48;;:7;:24;;;:48;;;;4661:81;4654:88;;4578:168;;;:::o;1746:439:10:-;1802:7;1815:16;1982:17;1834:11;;;;;;;;;;;:32;;;:34;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1834:34:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1834:34:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1834:34:10;;;;;;;;;;;;;;;;1815:53;;1966:8;1950:26;;1938:8;:38;1930:47;;;;;;;;2025:1;2014:8;:12;;;;;;;;2002:8;:25;1982:45;;428:9;2087;:31;2083:78;;;428:9;2125:31;;2083:78;2172:9;2165:16;;1746:439;;;:::o;1917:370:8:-;1977:4;2230:1;2209:4;:17;;;:22;;;2208:75;;;;;2269:12;2237:45;;:4;:21;;;:45;;;;2208:75;2201:82;;1917:370;;;:::o;6986:255::-;7081:4;7092:20;7137:18;7115:7;7123:9;7115:18;;;;;;;;;;;;;;;;;;;;7092:41;;7158:7;7166;7158:16;;;;;;;;;;;;;;;;;;;;7137:37;;7185:52;7204:6;7212:9;7223:4;7229:7;7185:18;:52::i;:::-;7178:59;;6986:255;;;;;;:::o;8114:825::-;8234:18;8275:20;8255:7;8263;8255:16;;;;;;;;;;;;;;;;;;;;8234:37;;8298:7;8306:9;8298:18;;;;;;;;;;;;;;;;;;;;8275:41;;8418:7;8389:6;:19;;;:37;;;;;;;;;;;;;;;;;;8475:22;8492:4;8475:16;:22::i;:::-;8501:24;8518:6;8501:16;:24::i;:::-;8660:20;:31;8681:9;8660:31;;;;;;;;;;;;8653:38;;;;;;;;;;;8702:20;:29;8723:7;8702:29;;;;;;;;;;;;8695:36;;;;;;;;;;;8799:15;;:17;;;;;;;;;;;;;8852:83;8861:17;:28;8879:9;8861:28;;;;;;;;;;;;;;;;;;;;;8891:9;8902:7;8911:6;:23;;;;;;;;;;;;8852:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8114:825;;;;:::o;8763:445:11:-;9021:12;8875:116;8889:2;8881:4;:10;;8875:116;;;8945:4;8939:11;8932:5;8925:26;8969:2;8960:11;;;;8984:2;8976:10;;;;8901:2;8893:10;;;;8875:116;;;9057:1;9049:4;9044:2;:9;9036:3;:18;:22;9021:37;;9112:4;9108:9;9101:4;9095:11;9091:27;9156:4;9148:5;9142:12;9138:23;9192:7;9182:8;9179:21;9172:5;9165:36;9071:134;;;;;;:::o;3166:542:8:-;3407:12;3388:15;;3355:9;3365:7;:21;;;;;;;;;;;;3355:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:48;;;;;;;;;;3354:65;3320:7;:24;;;:100;;;;;;;;;;;;;;;;;;3665:2;3641:7;:21;;;;;;;;;;;;:26;;;3637:68;;;3699:1;3674:7;:21;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3637:68;3166:542;:::o;313:6252:9:-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;313:6252:9;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.11;\n\nimport './KittyMinting.sol';\n\n/// @title CryptoKitties: Collectible, breedable, and oh-so-adorable cats on the Ethereum blockchain.\n/// @author Axiom Zen (https://www.axiomzen.co)\n/// @dev The main CryptoKitties contract, keeps track of kittens so they don't wander around and get lost.\ncontract KittyCore is KittyMinting {\n\n\t// This is the main CryptoKitties contract. In order to keep our code seperated into logical sections,\n\t// we've broken it up in two ways. First, we have several seperately-instantiated sibling contracts\n\t// that handle auctions and our super-top-secret genetic combination algorithm. The auctions are\n\t// seperate since their logic is somewhat complex and there's always a risk of subtle bugs. By keeping\n\t// them in their own contracts, we can upgrade them without disrupting the main contract that tracks\n\t// kitty ownership. The genetic combination algorithm is kept seperate so we can open-source all of\n\t// the rest of our code without making it _too_ easy for folks to figure out how the genetics work.\n\t// Don't worry, I'm sure someone will reverse engineer it soon enough!\n\t//\n\t// Secondly, we break the core contract into multiple files using inheritence, one for each major\n\t// facet of functionality of CK. This allows us to keep related code bundled together while still\n\t// avoiding a single giant file with everything in it. The breakdown is as follows:\n\t//\n\t//      - KittyBase: This is where we define the most fundamental code shared throughout the core\n\t//             functionality. This includes our main data storage, constants and data types, plus\n\t//             internal functions for managing these items.\n\t//\n\t//      - KittyAccessControl: This contract manages the various addresses and constraints for operations\n\t//             that can be executed only by specific roles. Namely CEO, CFO and COO.\n\t//\n\t//      - KittyOwnership: This provides the methods required for basic non-fungible token\n\t//             transactions, following the draft ERC-721 spec (https://github.com/ethereum/EIPs/issues/721).\n\t//\n\t//      - KittyBreeding: This file contains the methods necessary to breed cats together, including\n\t//             keeping track of siring offers, and relies on an external genetic combination contract.\n\t//\n\t//      - KittyAuctions: Here we have the public methods for auctioning or bidding on cats or siring\n\t//             services. The actual auction functionality is handled in two sibling contracts (one\n\t//             for sales and one for siring), while auction creation and bidding is mostly mediated\n\t//             through this facet of the core contract.\n\t//\n\t//      - KittyMinting: This final facet contains the functionality we use for creating new gen0 cats.\n\t//             We can make up to 5000 \"promo\" cats that can be given away (especially important when\n\t//             the community is new), and all others can only be created and then immediately put up\n\t//             for auction via an algorithmically determined starting price. Regardless of how they\n\t//             are created, there is a hard limit of 50k gen0 cats. After that, it's all up to the\n\t//             community to breed, breed, breed!\n\n\t// Set in case the core contract is broken and an upgrade is required\n\taddress public newContractAddress;\n\n\t/// @notice Creates the main CryptoKitties smart contract instance.\n\tfunction KittyCore() public {\n\t\t// Starts paused.\n\t\tpaused = true;\n\n\t\t// the creator of the contract is the initial CEO\n\t\tceoAddress = msg.sender;\n\n\t\t// the creator of the contract is also the initial COO\n\t\tcooAddress = msg.sender;\n\n\t\t// start with the mythical kitten 0 - so we don't have generation-0 parent issues\n\t\t_createKitty(0, 0, 0, uint256(-1), address(0));\n\t}\n\n\t/// @dev Used to mark the smart contract as upgraded, in case there is a serious\n\t///  breaking bug. This method does nothing but keep track of the new contract and\n\t///  emit a message indicating that the new address is set. It's up to clients of this\n\t///  contract to update to the new contract address in that case. (This contract will\n\t///  be paused indefinitely if such an upgrade takes place.)\n\t/// @param _v2Address new address\n\tfunction setNewAddress(address _v2Address) external onlyCEO whenPaused {\n\t\t// See README.md for updgrade plan\n\t\tnewContractAddress = _v2Address;\n\t\tContractUpgrade(_v2Address);\n\t}\n\n\t/// @notice No tipping!\n\t/// @dev Reject all Ether from being sent here, unless it's from one of the\n\t///  two auction contracts. (Hopefully, we can prevent user accidents.)\n\tfunction() external payable {\n\t\trequire(\n\t\t\tmsg.sender == address(saleAuction) ||\n\t\t\tmsg.sender == address(siringAuction)\n\t\t);\n\t}\n\n\t/// @notice Returns all the relevant information about a specific kitty.\n\t/// @param _id The ID of the kitty of interest.\n\tfunction getKitty(uint256 _id)\n\texternal\n\tview\n\treturns (\n\t\tbool isGestating,\n\t\tbool isReady,\n\t\tuint256 cooldownIndex,\n\t\tuint256 nextActionAt,\n\t\tuint256 siringWithId,\n\t\tuint256 birthTime,\n\t\tuint256 matronId,\n\t\tuint256 sireId,\n\t\tuint256 generation,\n\t\tuint256 genes\n\t) {\n\t\tKitty storage kit = kitties[_id];\n\n\t\t// if this variable is 0 then it's not gestating\n\t\tisGestating = (kit.siringWithId != 0);\n\t\tisReady = (kit.cooldownEndBlock <= block.number);\n\t\tcooldownIndex = uint256(kit.cooldownIndex);\n\t\tnextActionAt = uint256(kit.cooldownEndBlock);\n\t\tsiringWithId = uint256(kit.siringWithId);\n\t\tbirthTime = uint256(kit.birthTime);\n\t\tmatronId = uint256(kit.matronId);\n\t\tsireId = uint256(kit.sireId);\n\t\tgeneration = uint256(kit.generation);\n\t\tgenes = kit.genes;\n\t}\n\n\t/// @dev Override unpause so it requires all external contract addresses\n\t///  to be set before contract can be unpaused. Also, we can't have\n\t///  newContractAddress set either, because then the contract was upgraded.\n\t/// @notice This is public rather than external so we can call super.unpause\n\t///  without using an expensive CALL.\n\tfunction unpause() public onlyCEO whenPaused {\n\t\trequire(saleAuction != address(0));\n\t\trequire(siringAuction != address(0));\n\t\trequire(geneScience != address(0));\n\t\trequire(newContractAddress == address(0));\n\n\t\t// Actually unpause the contract.\n\t\tsuper.unpause();\n\t}\n\n\t// @dev Allows the CFO to capture the balance available to the contract.\n\tfunction withdrawBalance() external onlyCFO {\n\t\tuint256 balance = this.balance;\n\t\t// Subtract all the currently pregnant kittens we have, plus 1 of margin.\n\t\tuint256 subtractFees = (pregnantKitties + 1) * autoBirthFee;\n\n\t\tif (balance > subtractFees) {\n\t\t\tcfoAddress.send(balance - subtractFees);\n\t\t}\n\t}\n}\n",
  "sourcePath": "/Users/harrisonbeckerich/proj/vanimals/contracts/KittyCore.sol",
  "ast": {
    "absolutePath": "/Users/harrisonbeckerich/proj/vanimals/contracts/KittyCore.sol",
    "exportedSymbols": {
      "KittyCore": [
        2470
      ]
    },
    "id": 2471,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2214,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:9"
      },
      {
        "absolutePath": "/Users/harrisonbeckerich/proj/vanimals/contracts/KittyMinting.sol",
        "file": "./KittyMinting.sol",
        "id": 2215,
        "nodeType": "ImportDirective",
        "scope": 2471,
        "sourceUnit": 2624,
        "src": "26:28:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2216,
              "name": "KittyMinting",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2623,
              "src": "335:12:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KittyMinting_$2623",
                "typeString": "contract KittyMinting"
              }
            },
            "id": 2217,
            "nodeType": "InheritanceSpecifier",
            "src": "335:12:9"
          }
        ],
        "contractDependencies": [
          749,
          1025,
          1253,
          1566,
          2212,
          2623,
          3163
        ],
        "contractKind": "contract",
        "documentation": "@title CryptoKitties: Collectible, breedable, and oh-so-adorable cats on the Ethereum blockchain.\n @author Axiom Zen (https://www.axiomzen.co)\n @dev The main CryptoKitties contract, keeps track of kittens so they don't wander around and get lost.",
        "fullyImplemented": true,
        "id": 2470,
        "linearizedBaseContracts": [
          2470,
          2623,
          1253,
          2212,
          3163,
          749,
          1566,
          1025
        ],
        "name": "KittyCore",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2219,
            "name": "newContractAddress",
            "nodeType": "VariableDeclaration",
            "scope": 2470,
            "src": "3294:33:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2218,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3294:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2249,
              "nodeType": "Block",
              "src": "3428:341:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2222,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 869,
                      "src": "3452:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3461:4:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3452:13:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2225,
                  "nodeType": "ExpressionStatement",
                  "src": "3452:13:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2226,
                      "name": "ceoAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 862,
                      "src": "3522:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2227,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3616,
                        "src": "3535:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3535:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3522:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2230,
                  "nodeType": "ExpressionStatement",
                  "src": "3522:23:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2231,
                      "name": "cooAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 866,
                      "src": "3607:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2232,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3616,
                        "src": "3620:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3620:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3607:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2235,
                  "nodeType": "ExpressionStatement",
                  "src": "3607:23:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3732:1:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3735:1:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3738:1:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "3749:2:9",
                            "subExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 2241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3750:1:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_-1_by_1",
                              "typeString": "int_const -1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_-1_by_1",
                              "typeString": "int_const -1"
                            }
                          ],
                          "id": 2240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3741:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint256"
                        },
                        "id": 2243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3741:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3762:1:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3754:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3754:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2236,
                      "name": "_createKitty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1545,
                      "src": "3719:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,address) returns (uint256)"
                      }
                    },
                    "id": 2247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3719:46:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2248,
                  "nodeType": "ExpressionStatement",
                  "src": "3719:46:9"
                }
              ]
            },
            "documentation": "@notice Creates the main CryptoKitties smart contract instance.",
            "id": 2250,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "KittyCore",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3418:2:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 2221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3428:0:9"
            },
            "scope": 2470,
            "src": "3400:369:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2267,
              "nodeType": "Block",
              "src": "4281:107:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2259,
                      "name": "newContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2219,
                      "src": "4322:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2260,
                      "name": "_v2Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2252,
                      "src": "4343:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4322:31:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2262,
                  "nodeType": "ExpressionStatement",
                  "src": "4322:31:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2264,
                        "name": "_v2Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2252,
                        "src": "4373:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2263,
                      "name": "ContractUpgrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 860,
                      "src": "4357:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4357:27:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2266,
                  "nodeType": "ExpressionStatement",
                  "src": "4357:27:9"
                }
              ]
            },
            "documentation": "@dev Used to mark the smart contract as upgraded, in case there is a serious\n  breaking bug. This method does nothing but keep track of the new contract and\n  emit a message indicating that the new address is set. It's up to clients of this\n  contract to update to the new contract address in that case. (This contract will\n  be paused indefinitely if such an upgrade takes place.)\n @param _v2Address new address",
            "id": 2268,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2255,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2254,
                  "name": "onlyCEO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 880,
                  "src": "4262:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4262:7:9"
              },
              {
                "arguments": null,
                "id": 2257,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2256,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1000,
                  "src": "4270:10:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4270:10:9"
              }
            ],
            "name": "setNewAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2252,
                  "name": "_v2Address",
                  "nodeType": "VariableDeclaration",
                  "scope": 2268,
                  "src": "4233:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4233:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4232:20:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 2258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4281:0:9"
            },
            "scope": 2470,
            "src": "4210:178:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2287,
              "nodeType": "Block",
              "src": "4594:101:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2272,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3616,
                              "src": "4610:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4610:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2275,
                                "name": "saleAuction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1368,
                                "src": "4632:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SaleClockAuction_$3460",
                                  "typeString": "contract SaleClockAuction"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SaleClockAuction_$3460",
                                  "typeString": "contract SaleClockAuction"
                                }
                              ],
                              "id": 2274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4624:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 2276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4624:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4610:34:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2278,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3616,
                              "src": "4651:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4651:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2281,
                                "name": "siringAuction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1370,
                                "src": "4673:13:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SiringClockAuction_$3595",
                                  "typeString": "contract SiringClockAuction"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SiringClockAuction_$3595",
                                  "typeString": "contract SiringClockAuction"
                                }
                              ],
                              "id": 2280,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4665:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 2282,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4665:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4651:36:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4610:77:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2271,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3619,
                        3620
                      ],
                      "referencedDeclaration": 3619,
                      "src": "4598:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4598:93:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2286,
                  "nodeType": "ExpressionStatement",
                  "src": "4598:93:9"
                }
              ]
            },
            "documentation": "@notice No tipping!\n @dev Reject all Ether from being sent here, unless it's from one of the\n  two auction contracts. (Hopefully, we can prevent user accidents.)",
            "id": 2288,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4574:2:9"
            },
            "payable": true,
            "returnParameters": {
              "id": 2270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4594:0:9"
            },
            "scope": 2470,
            "src": "4566:129:9",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2390,
              "nodeType": "Block",
              "src": "5088:490:9",
              "statements": [
                {
                  "assignments": [
                    2314
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2314,
                      "name": "kit",
                      "nodeType": "VariableDeclaration",
                      "scope": 2391,
                      "src": "5092:17:9",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Kitty_$1297_storage_ptr",
                        "typeString": "struct KittyBase.Kitty"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2313,
                        "name": "Kitty",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1297,
                        "src": "5092:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Kitty_$1297_storage_ptr",
                          "typeString": "struct KittyBase.Kitty"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2318,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2315,
                      "name": "kitties",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1350,
                      "src": "5112:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Kitty_$1297_storage_$dyn_storage",
                        "typeString": "struct KittyBase.Kitty storage ref[] storage ref"
                      }
                    },
                    "id": 2317,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2316,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2290,
                      "src": "5120:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5112:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Kitty_$1297_storage",
                      "typeString": "struct KittyBase.Kitty storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5092:32:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2319,
                      "name": "isGestating",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2293,
                      "src": "5180:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 2323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2320,
                              "name": "kit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2314,
                              "src": "5195:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Kitty_$1297_storage_ptr",
                                "typeString": "struct KittyBase.Kitty storage pointer"
                              }
                            },
                            "id": 2321,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "siringWithId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1292,
                            "src": "5195:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5215:1:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5195:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 2324,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5194:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5180:37:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2326,
                  "nodeType": "ExpressionStatement",
                  "src": "5180:37:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2327,
                      "name": "isReady",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2295,
                      "src": "5221:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2328,
                              "name": "kit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2314,
                              "src": "5232:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Kitty_$1297_storage_ptr",
                                "typeString": "struct KittyBase.Kitty storage pointer"
                              }
                            },
                            "id": 2329,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "cooldownEndBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1286,
                            "src": "5232:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2330,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3606,
                              "src": "5256:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5256:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5232:36:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 2333,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5231:38:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5221:48:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2335,
                  "nodeType": "ExpressionStatement",
                  "src": "5221:48:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2336,
                      "name": "cooldownIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2297,
                      "src": "5273:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2338,
                            "name": "kit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2314,
                            "src": "5297:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$1297_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 2339,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cooldownIndex",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1294,
                          "src": "5297:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 2337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5289:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5289:26:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5273:42:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2342,
                  "nodeType": "ExpressionStatement",
                  "src": "5273:42:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2343,
                      "name": "nextActionAt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2299,
                      "src": "5319:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2345,
                            "name": "kit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2314,
                            "src": "5342:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$1297_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 2346,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cooldownEndBlock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1286,
                          "src": "5342:20:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 2344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5334:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5334:29:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5319:44:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2349,
                  "nodeType": "ExpressionStatement",
                  "src": "5319:44:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2350,
                      "name": "siringWithId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2301,
                      "src": "5367:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2352,
                            "name": "kit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2314,
                            "src": "5390:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$1297_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 2353,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "siringWithId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1292,
                          "src": "5390:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 2351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5382:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5382:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5367:40:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2356,
                  "nodeType": "ExpressionStatement",
                  "src": "5367:40:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2357,
                      "name": "birthTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2303,
                      "src": "5411:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2359,
                            "name": "kit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2314,
                            "src": "5431:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$1297_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 2360,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "birthTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1284,
                          "src": "5431:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 2358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5423:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5423:22:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5411:34:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2363,
                  "nodeType": "ExpressionStatement",
                  "src": "5411:34:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2364,
                      "name": "matronId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2305,
                      "src": "5449:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2366,
                            "name": "kit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2314,
                            "src": "5468:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$1297_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 2367,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "matronId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1288,
                          "src": "5468:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 2365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5460:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5460:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5449:32:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2370,
                  "nodeType": "ExpressionStatement",
                  "src": "5449:32:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2371,
                      "name": "sireId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2307,
                      "src": "5485:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2373,
                            "name": "kit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2314,
                            "src": "5502:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$1297_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 2374,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sireId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1290,
                          "src": "5502:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 2372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5494:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5494:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5485:28:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2377,
                  "nodeType": "ExpressionStatement",
                  "src": "5485:28:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2378,
                      "name": "generation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2309,
                      "src": "5517:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2380,
                            "name": "kit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2314,
                            "src": "5538:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$1297_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 2381,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "generation",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1296,
                          "src": "5538:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 2379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5530:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5530:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5517:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2384,
                  "nodeType": "ExpressionStatement",
                  "src": "5517:36:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2385,
                      "name": "genes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2311,
                      "src": "5557:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2386,
                        "name": "kit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2314,
                        "src": "5565:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Kitty_$1297_storage_ptr",
                          "typeString": "struct KittyBase.Kitty storage pointer"
                        }
                      },
                      "id": 2387,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "genes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1282,
                      "src": "5565:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5557:17:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2389,
                  "nodeType": "ExpressionStatement",
                  "src": "5557:17:9"
                }
              ]
            },
            "documentation": "@notice Returns all the relevant information about a specific kitty.\n @param _id The ID of the kitty of interest.",
            "id": 2391,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getKitty",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2290,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2391,
                  "src": "4839:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2289,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4839:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4838:13:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 2312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2293,
                  "name": "isGestating",
                  "nodeType": "VariableDeclaration",
                  "scope": 2391,
                  "src": "4881:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2292,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4881:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2295,
                  "name": "isReady",
                  "nodeType": "VariableDeclaration",
                  "scope": 2391,
                  "src": "4901:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2294,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4901:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2297,
                  "name": "cooldownIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 2391,
                  "src": "4917:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2296,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4917:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2299,
                  "name": "nextActionAt",
                  "nodeType": "VariableDeclaration",
                  "scope": 2391,
                  "src": "4942:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2298,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4942:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2301,
                  "name": "siringWithId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2391,
                  "src": "4966:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4966:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2303,
                  "name": "birthTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 2391,
                  "src": "4990:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2302,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4990:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2305,
                  "name": "matronId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2391,
                  "src": "5011:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5011:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2307,
                  "name": "sireId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2391,
                  "src": "5031:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2306,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5031:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2309,
                  "name": "generation",
                  "nodeType": "VariableDeclaration",
                  "scope": 2391,
                  "src": "5049:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2308,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5049:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2311,
                  "name": "genes",
                  "nodeType": "VariableDeclaration",
                  "scope": 2391,
                  "src": "5071:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5071:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4877:210:9"
            },
            "scope": 2470,
            "src": "4821:757:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2435,
              "nodeType": "Block",
              "src": "5963:221:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2399,
                          "name": "saleAuction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1368,
                          "src": "5975:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SaleClockAuction_$3460",
                            "typeString": "contract SaleClockAuction"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2401,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5998:1:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5990:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5990:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5975:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2398,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3619,
                        3620
                      ],
                      "referencedDeclaration": 3619,
                      "src": "5967:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5967:34:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2405,
                  "nodeType": "ExpressionStatement",
                  "src": "5967:34:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2407,
                          "name": "siringAuction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1370,
                          "src": "6013:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SiringClockAuction_$3595",
                            "typeString": "contract SiringClockAuction"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6038:1:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6030:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6030:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6013:27:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2406,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3619,
                        3620
                      ],
                      "referencedDeclaration": 3619,
                      "src": "6005:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6005:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2413,
                  "nodeType": "ExpressionStatement",
                  "src": "6005:36:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2415,
                          "name": "geneScience",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1589,
                          "src": "6053:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GeneScienceInterface_$854",
                            "typeString": "contract GeneScienceInterface"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6076:1:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6068:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6068:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6053:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2414,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3619,
                        3620
                      ],
                      "referencedDeclaration": 3619,
                      "src": "6045:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6045:34:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2421,
                  "nodeType": "ExpressionStatement",
                  "src": "6045:34:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2423,
                          "name": "newContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2219,
                          "src": "6091:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6121:1:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6113:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6113:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6091:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2422,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3619,
                        3620
                      ],
                      "referencedDeclaration": 3619,
                      "src": "6083:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6083:41:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2429,
                  "nodeType": "ExpressionStatement",
                  "src": "6083:41:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2430,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3660,
                        "src": "6165:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_KittyCore_$2470",
                          "typeString": "contract super KittyCore"
                        }
                      },
                      "id": 2432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unpause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1024,
                      "src": "6165:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6165:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2434,
                  "nodeType": "ExpressionStatement",
                  "src": "6165:15:9"
                }
              ]
            },
            "documentation": "@dev Override unpause so it requires all external contract addresses\n  to be set before contract can be unpaused. Also, we can't have\n  newContractAddress set either, because then the contract was upgraded.\n @notice This is public rather than external so we can call super.unpause\n  without using an expensive CALL.",
            "id": 2436,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2394,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2393,
                  "name": "onlyCEO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 880,
                  "src": "5944:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5944:7:9"
              },
              {
                "arguments": null,
                "id": 2396,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2395,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1000,
                  "src": "5952:10:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5952:10:9"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5934:2:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 2397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5963:0:9"
            },
            "scope": 2470,
            "src": "5918:266:9",
            "stateMutability": "nonpayable",
            "superFunction": 1024,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2468,
              "nodeType": "Block",
              "src": "6305:258:9",
              "statements": [
                {
                  "assignments": [
                    2442
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2442,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2469,
                      "src": "6309:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2441,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6309:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2445,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2443,
                      "name": "this",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3659,
                      "src": "6327:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_KittyCore_$2470",
                        "typeString": "contract KittyCore"
                      }
                    },
                    "id": 2444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "6327:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6309:30:9"
                },
                {
                  "assignments": [
                    2447
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2447,
                      "name": "subtractFees",
                      "nodeType": "VariableDeclaration",
                      "scope": 2469,
                      "src": "6419:20:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2446,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6419:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2454,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2448,
                            "name": "pregnantKitties",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1587,
                            "src": "6443:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 2449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6461:1:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "6443:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2451,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6442:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2452,
                      "name": "autoBirthFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1585,
                      "src": "6466:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6442:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6419:59:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2455,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2442,
                      "src": "6487:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2456,
                      "name": "subtractFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2447,
                      "src": "6497:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6487:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2467,
                  "nodeType": "IfStatement",
                  "src": "6483:77:9",
                  "trueBody": {
                    "id": 2466,
                    "nodeType": "Block",
                    "src": "6511:49:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 2461,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2442,
                                "src": "6532:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 2462,
                                "name": "subtractFees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2447,
                                "src": "6542:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6532:22:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2458,
                              "name": "cfoAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 864,
                              "src": "6516:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 2460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "send",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6516:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) returns (bool)"
                            }
                          },
                          "id": 2464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6516:39:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2465,
                        "nodeType": "ExpressionStatement",
                        "src": "6516:39:9"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 2469,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2439,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2438,
                  "name": "onlyCFO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 891,
                  "src": "6297:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6297:7:9"
              }
            ],
            "name": "withdrawBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6285:2:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 2440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6305:0:9"
            },
            "scope": 2470,
            "src": "6261:302:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2471,
        "src": "313:6252:9"
      }
    ],
    "src": "0:6566:9"
  },
  "legacyAST": {
    "absolutePath": "/Users/harrisonbeckerich/proj/vanimals/contracts/KittyCore.sol",
    "exportedSymbols": {
      "KittyCore": [
        2470
      ]
    },
    "id": 2471,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2214,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:9"
      },
      {
        "absolutePath": "/Users/harrisonbeckerich/proj/vanimals/contracts/KittyMinting.sol",
        "file": "./KittyMinting.sol",
        "id": 2215,
        "nodeType": "ImportDirective",
        "scope": 2471,
        "sourceUnit": 2624,
        "src": "26:28:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2216,
              "name": "KittyMinting",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2623,
              "src": "335:12:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KittyMinting_$2623",
                "typeString": "contract KittyMinting"
              }
            },
            "id": 2217,
            "nodeType": "InheritanceSpecifier",
            "src": "335:12:9"
          }
        ],
        "contractDependencies": [
          749,
          1025,
          1253,
          1566,
          2212,
          2623,
          3163
        ],
        "contractKind": "contract",
        "documentation": "@title CryptoKitties: Collectible, breedable, and oh-so-adorable cats on the Ethereum blockchain.\n @author Axiom Zen (https://www.axiomzen.co)\n @dev The main CryptoKitties contract, keeps track of kittens so they don't wander around and get lost.",
        "fullyImplemented": true,
        "id": 2470,
        "linearizedBaseContracts": [
          2470,
          2623,
          1253,
          2212,
          3163,
          749,
          1566,
          1025
        ],
        "name": "KittyCore",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2219,
            "name": "newContractAddress",
            "nodeType": "VariableDeclaration",
            "scope": 2470,
            "src": "3294:33:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2218,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3294:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2249,
              "nodeType": "Block",
              "src": "3428:341:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2222,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 869,
                      "src": "3452:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3461:4:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3452:13:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2225,
                  "nodeType": "ExpressionStatement",
                  "src": "3452:13:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2226,
                      "name": "ceoAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 862,
                      "src": "3522:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2227,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3616,
                        "src": "3535:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3535:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3522:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2230,
                  "nodeType": "ExpressionStatement",
                  "src": "3522:23:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2231,
                      "name": "cooAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 866,
                      "src": "3607:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2232,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3616,
                        "src": "3620:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3620:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3607:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2235,
                  "nodeType": "ExpressionStatement",
                  "src": "3607:23:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3732:1:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3735:1:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3738:1:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "3749:2:9",
                            "subExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 2241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3750:1:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_-1_by_1",
                              "typeString": "int_const -1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_-1_by_1",
                              "typeString": "int_const -1"
                            }
                          ],
                          "id": 2240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3741:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint256"
                        },
                        "id": 2243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3741:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3762:1:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3754:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 2246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3754:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2236,
                      "name": "_createKitty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1545,
                      "src": "3719:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256,uint256,address) returns (uint256)"
                      }
                    },
                    "id": 2247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3719:46:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2248,
                  "nodeType": "ExpressionStatement",
                  "src": "3719:46:9"
                }
              ]
            },
            "documentation": "@notice Creates the main CryptoKitties smart contract instance.",
            "id": 2250,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "KittyCore",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3418:2:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 2221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3428:0:9"
            },
            "scope": 2470,
            "src": "3400:369:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2267,
              "nodeType": "Block",
              "src": "4281:107:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2259,
                      "name": "newContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2219,
                      "src": "4322:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2260,
                      "name": "_v2Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2252,
                      "src": "4343:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4322:31:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2262,
                  "nodeType": "ExpressionStatement",
                  "src": "4322:31:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2264,
                        "name": "_v2Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2252,
                        "src": "4373:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2263,
                      "name": "ContractUpgrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 860,
                      "src": "4357:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4357:27:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2266,
                  "nodeType": "ExpressionStatement",
                  "src": "4357:27:9"
                }
              ]
            },
            "documentation": "@dev Used to mark the smart contract as upgraded, in case there is a serious\n  breaking bug. This method does nothing but keep track of the new contract and\n  emit a message indicating that the new address is set. It's up to clients of this\n  contract to update to the new contract address in that case. (This contract will\n  be paused indefinitely if such an upgrade takes place.)\n @param _v2Address new address",
            "id": 2268,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2255,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2254,
                  "name": "onlyCEO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 880,
                  "src": "4262:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4262:7:9"
              },
              {
                "arguments": null,
                "id": 2257,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2256,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1000,
                  "src": "4270:10:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4270:10:9"
              }
            ],
            "name": "setNewAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2252,
                  "name": "_v2Address",
                  "nodeType": "VariableDeclaration",
                  "scope": 2268,
                  "src": "4233:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4233:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4232:20:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 2258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4281:0:9"
            },
            "scope": 2470,
            "src": "4210:178:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2287,
              "nodeType": "Block",
              "src": "4594:101:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2272,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3616,
                              "src": "4610:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4610:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2275,
                                "name": "saleAuction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1368,
                                "src": "4632:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SaleClockAuction_$3460",
                                  "typeString": "contract SaleClockAuction"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SaleClockAuction_$3460",
                                  "typeString": "contract SaleClockAuction"
                                }
                              ],
                              "id": 2274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4624:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 2276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4624:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4610:34:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2278,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3616,
                              "src": "4651:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4651:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2281,
                                "name": "siringAuction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1370,
                                "src": "4673:13:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SiringClockAuction_$3595",
                                  "typeString": "contract SiringClockAuction"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SiringClockAuction_$3595",
                                  "typeString": "contract SiringClockAuction"
                                }
                              ],
                              "id": 2280,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4665:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 2282,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4665:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4651:36:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4610:77:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2271,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3619,
                        3620
                      ],
                      "referencedDeclaration": 3619,
                      "src": "4598:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4598:93:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2286,
                  "nodeType": "ExpressionStatement",
                  "src": "4598:93:9"
                }
              ]
            },
            "documentation": "@notice No tipping!\n @dev Reject all Ether from being sent here, unless it's from one of the\n  two auction contracts. (Hopefully, we can prevent user accidents.)",
            "id": 2288,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4574:2:9"
            },
            "payable": true,
            "returnParameters": {
              "id": 2270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4594:0:9"
            },
            "scope": 2470,
            "src": "4566:129:9",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2390,
              "nodeType": "Block",
              "src": "5088:490:9",
              "statements": [
                {
                  "assignments": [
                    2314
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2314,
                      "name": "kit",
                      "nodeType": "VariableDeclaration",
                      "scope": 2391,
                      "src": "5092:17:9",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Kitty_$1297_storage_ptr",
                        "typeString": "struct KittyBase.Kitty"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2313,
                        "name": "Kitty",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1297,
                        "src": "5092:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Kitty_$1297_storage_ptr",
                          "typeString": "struct KittyBase.Kitty"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2318,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2315,
                      "name": "kitties",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1350,
                      "src": "5112:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Kitty_$1297_storage_$dyn_storage",
                        "typeString": "struct KittyBase.Kitty storage ref[] storage ref"
                      }
                    },
                    "id": 2317,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2316,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2290,
                      "src": "5120:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5112:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Kitty_$1297_storage",
                      "typeString": "struct KittyBase.Kitty storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5092:32:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2319,
                      "name": "isGestating",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2293,
                      "src": "5180:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 2323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2320,
                              "name": "kit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2314,
                              "src": "5195:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Kitty_$1297_storage_ptr",
                                "typeString": "struct KittyBase.Kitty storage pointer"
                              }
                            },
                            "id": 2321,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "siringWithId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1292,
                            "src": "5195:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5215:1:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5195:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 2324,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5194:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5180:37:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2326,
                  "nodeType": "ExpressionStatement",
                  "src": "5180:37:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2327,
                      "name": "isReady",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2295,
                      "src": "5221:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2328,
                              "name": "kit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2314,
                              "src": "5232:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Kitty_$1297_storage_ptr",
                                "typeString": "struct KittyBase.Kitty storage pointer"
                              }
                            },
                            "id": 2329,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "cooldownEndBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1286,
                            "src": "5232:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2330,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3606,
                              "src": "5256:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5256:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5232:36:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 2333,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5231:38:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5221:48:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2335,
                  "nodeType": "ExpressionStatement",
                  "src": "5221:48:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2336,
                      "name": "cooldownIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2297,
                      "src": "5273:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2338,
                            "name": "kit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2314,
                            "src": "5297:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$1297_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 2339,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cooldownIndex",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1294,
                          "src": "5297:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 2337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5289:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5289:26:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5273:42:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2342,
                  "nodeType": "ExpressionStatement",
                  "src": "5273:42:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2343,
                      "name": "nextActionAt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2299,
                      "src": "5319:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2345,
                            "name": "kit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2314,
                            "src": "5342:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$1297_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 2346,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cooldownEndBlock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1286,
                          "src": "5342:20:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 2344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5334:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5334:29:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5319:44:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2349,
                  "nodeType": "ExpressionStatement",
                  "src": "5319:44:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2350,
                      "name": "siringWithId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2301,
                      "src": "5367:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2352,
                            "name": "kit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2314,
                            "src": "5390:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$1297_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 2353,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "siringWithId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1292,
                          "src": "5390:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 2351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5382:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5382:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5367:40:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2356,
                  "nodeType": "ExpressionStatement",
                  "src": "5367:40:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2357,
                      "name": "birthTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2303,
                      "src": "5411:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2359,
                            "name": "kit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2314,
                            "src": "5431:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$1297_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 2360,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "birthTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1284,
                          "src": "5431:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 2358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5423:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5423:22:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5411:34:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2363,
                  "nodeType": "ExpressionStatement",
                  "src": "5411:34:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2364,
                      "name": "matronId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2305,
                      "src": "5449:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2366,
                            "name": "kit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2314,
                            "src": "5468:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$1297_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 2367,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "matronId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1288,
                          "src": "5468:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 2365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5460:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5460:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5449:32:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2370,
                  "nodeType": "ExpressionStatement",
                  "src": "5449:32:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2371,
                      "name": "sireId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2307,
                      "src": "5485:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2373,
                            "name": "kit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2314,
                            "src": "5502:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$1297_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 2374,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sireId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1290,
                          "src": "5502:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 2372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5494:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5494:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5485:28:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2377,
                  "nodeType": "ExpressionStatement",
                  "src": "5485:28:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2378,
                      "name": "generation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2309,
                      "src": "5517:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2380,
                            "name": "kit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2314,
                            "src": "5538:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Kitty_$1297_storage_ptr",
                              "typeString": "struct KittyBase.Kitty storage pointer"
                            }
                          },
                          "id": 2381,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "generation",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1296,
                          "src": "5538:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "id": 2379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5530:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 2382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5530:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5517:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2384,
                  "nodeType": "ExpressionStatement",
                  "src": "5517:36:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2385,
                      "name": "genes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2311,
                      "src": "5557:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2386,
                        "name": "kit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2314,
                        "src": "5565:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Kitty_$1297_storage_ptr",
                          "typeString": "struct KittyBase.Kitty storage pointer"
                        }
                      },
                      "id": 2387,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "genes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1282,
                      "src": "5565:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5557:17:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2389,
                  "nodeType": "ExpressionStatement",
                  "src": "5557:17:9"
                }
              ]
            },
            "documentation": "@notice Returns all the relevant information about a specific kitty.\n @param _id The ID of the kitty of interest.",
            "id": 2391,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getKitty",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2290,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 2391,
                  "src": "4839:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2289,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4839:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4838:13:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 2312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2293,
                  "name": "isGestating",
                  "nodeType": "VariableDeclaration",
                  "scope": 2391,
                  "src": "4881:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2292,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4881:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2295,
                  "name": "isReady",
                  "nodeType": "VariableDeclaration",
                  "scope": 2391,
                  "src": "4901:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2294,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4901:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2297,
                  "name": "cooldownIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 2391,
                  "src": "4917:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2296,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4917:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2299,
                  "name": "nextActionAt",
                  "nodeType": "VariableDeclaration",
                  "scope": 2391,
                  "src": "4942:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2298,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4942:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2301,
                  "name": "siringWithId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2391,
                  "src": "4966:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4966:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2303,
                  "name": "birthTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 2391,
                  "src": "4990:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2302,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4990:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2305,
                  "name": "matronId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2391,
                  "src": "5011:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5011:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2307,
                  "name": "sireId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2391,
                  "src": "5031:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2306,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5031:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2309,
                  "name": "generation",
                  "nodeType": "VariableDeclaration",
                  "scope": 2391,
                  "src": "5049:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2308,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5049:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2311,
                  "name": "genes",
                  "nodeType": "VariableDeclaration",
                  "scope": 2391,
                  "src": "5071:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5071:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4877:210:9"
            },
            "scope": 2470,
            "src": "4821:757:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2435,
              "nodeType": "Block",
              "src": "5963:221:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2399,
                          "name": "saleAuction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1368,
                          "src": "5975:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SaleClockAuction_$3460",
                            "typeString": "contract SaleClockAuction"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2401,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5998:1:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5990:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5990:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5975:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2398,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3619,
                        3620
                      ],
                      "referencedDeclaration": 3619,
                      "src": "5967:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5967:34:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2405,
                  "nodeType": "ExpressionStatement",
                  "src": "5967:34:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2407,
                          "name": "siringAuction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1370,
                          "src": "6013:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SiringClockAuction_$3595",
                            "typeString": "contract SiringClockAuction"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6038:1:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6030:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6030:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6013:27:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2406,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3619,
                        3620
                      ],
                      "referencedDeclaration": 3619,
                      "src": "6005:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6005:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2413,
                  "nodeType": "ExpressionStatement",
                  "src": "6005:36:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2415,
                          "name": "geneScience",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1589,
                          "src": "6053:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GeneScienceInterface_$854",
                            "typeString": "contract GeneScienceInterface"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6076:1:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6068:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6068:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6053:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2414,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3619,
                        3620
                      ],
                      "referencedDeclaration": 3619,
                      "src": "6045:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6045:34:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2421,
                  "nodeType": "ExpressionStatement",
                  "src": "6045:34:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2423,
                          "name": "newContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2219,
                          "src": "6091:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6121:1:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6113:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6113:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6091:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2422,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3619,
                        3620
                      ],
                      "referencedDeclaration": 3619,
                      "src": "6083:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6083:41:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2429,
                  "nodeType": "ExpressionStatement",
                  "src": "6083:41:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2430,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3660,
                        "src": "6165:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_KittyCore_$2470",
                          "typeString": "contract super KittyCore"
                        }
                      },
                      "id": 2432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unpause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1024,
                      "src": "6165:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6165:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2434,
                  "nodeType": "ExpressionStatement",
                  "src": "6165:15:9"
                }
              ]
            },
            "documentation": "@dev Override unpause so it requires all external contract addresses\n  to be set before contract can be unpaused. Also, we can't have\n  newContractAddress set either, because then the contract was upgraded.\n @notice This is public rather than external so we can call super.unpause\n  without using an expensive CALL.",
            "id": 2436,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2394,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2393,
                  "name": "onlyCEO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 880,
                  "src": "5944:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5944:7:9"
              },
              {
                "arguments": null,
                "id": 2396,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2395,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1000,
                  "src": "5952:10:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5952:10:9"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5934:2:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 2397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5963:0:9"
            },
            "scope": 2470,
            "src": "5918:266:9",
            "stateMutability": "nonpayable",
            "superFunction": 1024,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2468,
              "nodeType": "Block",
              "src": "6305:258:9",
              "statements": [
                {
                  "assignments": [
                    2442
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2442,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 2469,
                      "src": "6309:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2441,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6309:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2445,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 2443,
                      "name": "this",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3659,
                      "src": "6327:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_KittyCore_$2470",
                        "typeString": "contract KittyCore"
                      }
                    },
                    "id": 2444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "6327:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6309:30:9"
                },
                {
                  "assignments": [
                    2447
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2447,
                      "name": "subtractFees",
                      "nodeType": "VariableDeclaration",
                      "scope": 2469,
                      "src": "6419:20:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2446,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6419:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2454,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2448,
                            "name": "pregnantKitties",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1587,
                            "src": "6443:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 2449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6461:1:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "6443:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2451,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6442:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2452,
                      "name": "autoBirthFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1585,
                      "src": "6466:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6442:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6419:59:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2455,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2442,
                      "src": "6487:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2456,
                      "name": "subtractFees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2447,
                      "src": "6497:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6487:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2467,
                  "nodeType": "IfStatement",
                  "src": "6483:77:9",
                  "trueBody": {
                    "id": 2466,
                    "nodeType": "Block",
                    "src": "6511:49:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 2461,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2442,
                                "src": "6532:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 2462,
                                "name": "subtractFees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2447,
                                "src": "6542:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6532:22:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2458,
                              "name": "cfoAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 864,
                              "src": "6516:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 2460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "send",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6516:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) returns (bool)"
                            }
                          },
                          "id": 2464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6516:39:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2465,
                        "nodeType": "ExpressionStatement",
                        "src": "6516:39:9"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 2469,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2439,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2438,
                  "name": "onlyCFO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 891,
                  "src": "6297:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6297:7:9"
              }
            ],
            "name": "withdrawBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6285:2:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 2440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6305:0:9"
            },
            "scope": 2470,
            "src": "6261:302:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 2471,
        "src": "313:6252:9"
      }
    ],
    "src": "0:6566:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-07-05T21:18:37.487Z"
}